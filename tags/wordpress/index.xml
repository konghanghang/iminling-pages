<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wordpress on 记录点滴 - 分享</title><link>https://www.iminling.com/tags/wordpress/</link><description>Recent content in Wordpress on 记录点滴 - 分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>iminling.com</copyright><lastBuildDate>Sun, 06 Apr 2025 09:20:36 +0000</lastBuildDate><atom:link href="https://www.iminling.com/tags/wordpress/index.xml" rel="self" type="application/rss+xml"/><item><title>WordPress使用git-it-write插件配合github自动发布markdown</title><link>https://www.iminling.com/2025/wordpress-use-git-it-write-and-github-publish-markdown-file/</link><pubDate>Sun, 06 Apr 2025 09:20:36 +0000</pubDate><guid>https://www.iminling.com/2025/wordpress-use-git-it-write-and-github-publish-markdown-file/</guid><description>&lt;h1 id="wordpress使用git-it-write插件配合github自动发布markdown">WordPress使用git-it-write插件配合github自动发布markdown
&lt;/h1>&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=SlBudmJhK1kyNkJ5NGtnVm53c1kwOUpBdFNJd1I2dHR5NXk5VjM1QkNsN1VtWm9DVWNJdi9jdEEyL0o0eTZDTXJPNUhlT3c9"
loading="lazy"
alt="What Is Markdown, and How Do You Use It?"
>&lt;/p>
&lt;p>以前发布文章都是直接在wordpress后台手动编辑，手动上传文件，确认无误后再发布，整个过程比较耗时，并且有点麻烦。最近这两天忽然有一个想法：我直接写markdown然后，然后在wordpress中找支持markdown的编辑器插件，把我的内容直接粘贴进去，这样子不就方便很多了吗？于是就找到了&lt;strong>WP-Githuber-MD&lt;/strong>这个插件，再探索的过程中无意又发现了&lt;strong>git-it-write&lt;/strong>这个可以自动化的插件，于是就开始了折腾之旅行。&lt;/p>
&lt;h2 id="插件安装和配置">插件安装和配置
&lt;/h2>&lt;p>Git-it-write插件在Wordpress的插件库是可以找到的，直接搜索安装就可以了。安装后可以在设置中找到对这个插件的配置。&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=MWp2VEQ0OWJhQ1ZvS3dTUmxGNHJ4VFhsc2JQcFFRY21MS0VORWFhSzRRekFOT2ZQYzBkcEl0WjlORk1pKy9ONHFiM3BRK1E9"
loading="lazy"
alt="image-20250406105054694"
>&lt;/p>
&lt;/figure>
&lt;h2 id="仓库配置">仓库配置
&lt;/h2>&lt;p>想要配合github进行自动发布，首先要解决的就是从仓库里拉去到&lt;code>.md&lt;/code>的文件，所以需要去配置一个git仓库，我们可以先创建好这个git仓库，然后再来进行配置。&lt;/p>
&lt;p>点击左上的&lt;code>add a new repository to publish posts form&lt;/code>按钮来添加一个新的仓库：&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=aHNJb2F0ZE5jMFU4azFuZ05GTVlTNS9UaHNnazV3RXhDT3pnY1F4Zk5iTkcvSzlhYy91R3JJVG5KTlBXQy96YWkzUENRajA9"
loading="lazy"
alt="image-20250406105418250"
>&lt;/p>
&lt;/figure>
&lt;p>有几个地方需要设置一下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置项&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Github username/owner&lt;/td>
&lt;td>这个自己的github用户名&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repository name&lt;/td>
&lt;td>仓库名称，新建或者已存在的一个仓库名称&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Branch to publish from&lt;/td>
&lt;td>仓库的分支，根据自己的仓库来设置，master, main等&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Folder to publish from&lt;/td>
&lt;td>我整个仓库都是需要发布的，而不是只发布其中一个目录，所以这里留空。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Post type to publish to&lt;/td>
&lt;td>我要发布的是文章，自己根据自己的需求来选择。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>其他的选项就默认了。&lt;/p>
&lt;p>因为我这里建的是一个私有的仓库，想要拉取到仓库里的内容，我这里需要配置一下github access token,填在General settings的位置。如果是public类型的仓库，可以尝试一下不配置或者也配置一下，因为我不是这种情况，所以没有进行详细的研究。下边就来看一下如何获取github access token.&lt;/p>
&lt;h2 id="获取github-access-token">获取github access token
&lt;/h2>&lt;p>来到&lt;code>github&lt;/code>的&lt;code>settings&lt;/code>页面：登录&lt;code>github&lt;/code>后，点击右上角的头像，就会看到有&lt;code>settings&lt;/code>选项。进入&lt;code>settings&lt;/code>后，拉到最下边找到&lt;code>developer settings&lt;/code>选项，如下图：&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=dloxM1QyZDBSeHpkSHhuUXFnOXE3dE9KRjJ0N056ekYyb1pPMFNpak1ITmM0MWZjUHVkMDRVNVFIQjJOOW9LYkdjOXJPdHc9"
loading="lazy"
alt="image-20250406110451346"
>&lt;/p>
&lt;/figure>
&lt;p>点击在personal access tokens中进行添加和删除等操作：&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=UlVOOEFEekZDVTZkWkV1NElkd2U1NC9vWXYwVVZGRFdXZnNhMG1sZGlSZWx6NkpOT1dId201RmdaZkJVR3YvSEJQZkZvRkk9"
loading="lazy"
alt="image-20250406110617783"
>&lt;/p>
&lt;/figure>
&lt;p>点击右上角的Generate new token来新建一个token，设置页面如下：&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=NVpqaXRGRTUyZUQ1QytZdTA1WWthQzBLU2NZdjJqd0lrT2hEYkxTSjZuWEoyaG5kUHlQa2hlaDFYNC95anpwME5sWFNHYU09"
loading="lazy"
alt="image-20250406110820880"
>&lt;/p>
&lt;/figure>
&lt;p>相关的配置项说明：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置项&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Token name&lt;/td>
&lt;td>自定义的一个说明名称，可以随意配置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Description&lt;/td>
&lt;td>说明，可以留空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource owner&lt;/td>
&lt;td>正常情况下，选择自己的github用户就可以了&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Expiration&lt;/td>
&lt;td>token的过期时间，根据自己的情况设置，我这里设置永不过期&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repository access&lt;/td>
&lt;td>仓库访问权，我这里选择只给他访问特定的仓库&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Permissions&lt;/td>
&lt;td>这里需要注意了，&lt;strong>Repository permission一定要点开，然后对每项进行设置&lt;/strong>，我这里每项都只给access权限。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>设置完成后就可以生成token了，把生成的tokent填写在&lt;code>General settings&lt;/code>处了：&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=a3FndlRxSDZOd2xlWmVlS3pXT0FOTURqRjNWRzVMeXVsQ1AvYWpEUTc2SG1NNkhWdE9kU3U0WitWb0VSZWxIbXdsdTZnRTQ9"
loading="lazy"
alt="image-20250406111447759"
>&lt;/p>
&lt;/figure>
&lt;p>Github username就是自己的github用户名。&lt;/p>
&lt;p>至此git it write插件就配置完成了。现在要做的就是在仓库里写一篇markdown格式的文档来进行发布了。&lt;/p>
&lt;h2 id="发布">发布
&lt;/h2>&lt;p>在我们写完markdown文件后，push到上边配置的git仓库中，下边就可以来进行发布操作了。&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=eUtGZTQ1cTJqbWl2dHN0SVhtS1U4a0NuMEpIbTdwbE54VklTc1hldWVEMUphY2JYRTJJVGNXdlM4d2JFekxkMjNpWlNoUkU9"
loading="lazy"
alt="image-20250406164203217"
>&lt;/p>
&lt;/figure>
&lt;p>在wordpress插件git it write插件中添加仓库后，可以看到如上图所示的内容，我们可以点击pull posts中git仓库中拉取markdown文件进行发布。点击后有两个选项，一个是只pull更新，另一个是pull所有文件。如果是第一次拉取仓库内容，就使用pull all the files拉取左右的内容，后续就可以使用pull only changes只拉取变更的内容。&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=ZGlPT2cwSVE3VjJwS0p2Wk94ZWg2cWR4cFFpa3YrbVYzOFVjQ21rZktRREhyeFpEK3NlNkdCbnRYWXlneG9NRktaYmtJelk9"
loading="lazy"
alt="image-20250406164324796"
>&lt;/p>
&lt;/figure>
&lt;p>如果拉取有问题，也可以点击上边图片中的Logs来查看插件的日志来方便排查问题。截止到上边就已经差不多完成插件配置了。那么此时就需要我们每写完一篇文章就需要到wordpress的后台来进行手动pull一下，是不是也有点麻烦呢？接下来就讲一下如果来自动化发布。&lt;/p>
&lt;h2 id="webbook-配置">Webbook 配置
&lt;/h2>&lt;p>在git it write的配置页面可以看到webhook secret的配置选项，没错，这个就是和github的webhook进行联动的，需要我们在github中进行相关的配置。&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=RnVrcWhZd0RnMXVGdlA3Nm5mNHNXZDhPTkFtNUgvb3k0am1EaWdOZTdCYzdnRnNvbi81VlhUVDBuc3d0Y2FBOEJPQjVyZ0k9"
loading="lazy"
alt="image-20250406164919715"
>&lt;/p>
&lt;/figure>
&lt;p>在github仓库的设置页面，我们可以进行webbook的配置，可以添加一个webhook,具体的webhook地址可以看git it write插件页面给的提示，那里会详细说明完整的webhook地址是什么。如下图是我的完整webhook地址，当时只有地址还是不行的，我们需要配置一个密钥，这个就自己根据自己的情况来进行配置，防止被别人猜到。&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=V2FYb2J3Q05NL0NwTWppTmdTejN1NmNKZnZveDlXMjdzbEpObEVnVVEwbE1uckYxSEloWEplNkdrOWgyN1BYZ1JhamZPRHM9"
loading="lazy"
alt="image-20250406165045811"
>&lt;/p>
&lt;/figure>
&lt;p>github中添加webhook如下，需要填写url，content type以及secret，这里的secret和git it write中的是同一个。另外需要什么时候来触发这个webhook,我这里选择&lt;code>Just the push event&lt;/code>.其他的大家根据需求来进行填写。&lt;figure class="wp-block-image size-full">&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=OWt4QU9weGhOSXJLL1NjTzVxQ3VRdGlPMG5WVmdFT21XdktOMzhWTFNqTGZSVnRsVWFUMklNNzhKdytQRVV6eks5M0lTQWM9"
loading="lazy"
alt="image-20250406165256944"
>&lt;/p>
&lt;/figure>
&lt;p>经过上边的配置，我们在写好markdown文件后，只需要push到git仓库中，那么github就会触发webhook通知到wordpress中的git it write插件，插件就会来仓库中拉取markdown文件，然后进行发布。做到自动化处理发布动作。&lt;/p>
&lt;h2 id="markdown-文件">Markdown 文件
&lt;/h2>&lt;p>经过上边的步骤基本已经可以正常的发布文章了，但是这里还有一个重要的问题就是发布后的文章的分类、url以及标签这些信息是怎么处理的？我们要怎么给指定呢？下边就来给大家介绍。&lt;/p>
&lt;p>在markdown文件中，每个文件的顶部可以使用yaml来设置一些属性信息，这些属性信息就可以来设置我们发布文章的一些属性信息。设置的格式如下：&lt;/p>
&lt;pre>&lt;code>---
title: &amp;quot;Wordpress使用git-it-write插件配合github自动发布markdown&amp;quot;
date: 2025-04-06
post_excerpt: 以前发布文章都是直接在wordpress后台手动编辑，手动上传文件，确认无误后再发布，整个过程比较耗时，并且有点麻烦。最近这两天忽然有一个想法：我直接写markdown然后，然后在wordpress中找支持markdown的编辑器插件，把我的内容直接粘贴进去，这样子不就方便很多了吗？于是就找到了WP-Githuber-MD这个插件，再探索的过程中无意又发现了git-it-write这个可以自动化的插件，于是就开始了折腾之旅行。
post_status: publish
comment_status: open
taxonomy:
category:
- wordpress
post_tag:
- wordpress
- github
- git-it-write
- markdown
slug: &amp;quot;wordpress-use-git-it-write-and-github-publish-markdown-file&amp;quot;
---
&lt;/code>&lt;/pre>
&lt;p>是以&lt;code>---&lt;/code>开始，然后设置一些特殊的属性。我这里介绍一下我上边使用到的一些信息。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Titile&lt;/td>
&lt;td>发布文章的标题&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>date&lt;/td>
&lt;td>发布文章的日志&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>post_excerpt&lt;/td>
&lt;td>帖子摘录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Post_status&lt;/td>
&lt;td>发布文章的状态，可以选择：publish, draft, pending, future.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Comment_status&lt;/td>
&lt;td>评论的状态，这个默认值是closed.所以如果想要打开文章的评论功能，这个值要给open&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Taxonmy&lt;/td>
&lt;td>这里设置文章的一些属性&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Category&lt;/td>
&lt;td>Taxonmy 的下级，文章的分类，这个是实际发布文章后的分类&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>post_tag&lt;/td>
&lt;td>Taxonmy 的下级，文章的标签，也是实际发布后文章的标签&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>slug&lt;/td>
&lt;td>暂时也没发现有什么用处，本来以为是文章的自定义url，实际上不是。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>我所使用到的就是上边这些属性，其他的属性暂时还没有使用到，如果有兴趣的小伙伴可以自己去看一下官方的文章，自行研究使用方法：&lt;a class="link" href="https://www.aakashweb.com/docs/git-it-write/getting-started/" target="_blank" rel="noopener"
>Getting started&lt;/a>.&lt;/p>
&lt;p>&lt;strong>另外文章的自定义url是读取的md文件的文件名。&lt;/strong>&lt;/p>
&lt;p>另外，如果github仓库中的文章是有目录的，那么他会发布一个以文件夹命名的文章，暂时没有很好的解决这个问题，他只会发布一次，发布后改后私有的解决问题。&lt;/p>
&lt;p>以上就是Wordpress使用git-it-write插件配合github自动发布markdown文章的折腾过程，希望可以帮助到大家。&lt;/p></description></item><item><title>WordPress用户登录管理后台进行邮件或Telegram通知</title><link>https://www.iminling.com/2023/wordpress-login-use-mail-telegram-notice/</link><pubDate>Fri, 29 Sep 2023 08:46:00 +0000</pubDate><guid>https://www.iminling.com/2023/wordpress-login-use-mail-telegram-notice/</guid><description>&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/09/5b936c4101fb2b204daf36d0c1457d48.jpeg"
loading="lazy"
>&lt;/p>
&lt;p>前段遇到了一个大麻烦，我的网站主页发布了两篇非我自己写的文章，在登录了worpress后台后，发现的确是有两篇文章，随后赶紧删除了那两篇文章。经过排查发现是xmlrpc功能没有关闭导致的，所以就有了我的上篇文章：&lt;a class="link" href="https://www.iminling.com/2023/09/03/241.html" title="禁用xmlrpc.php防止wordpress被暴力破解"
target="_blank" rel="noopener"
>禁用xmlrpc.php防止wordpress被暴力破解&lt;/a>，事后及时关闭了该功能，然后就想着，既然要发布文章，是不是要登录我的管理后台，那么是否可以设置在用户登录wordpress管理后台的时候进行通知我呢，然后就去搜索了一下相关功能，果然还是有办法通知到我的。下边简单的分享一下该功能。&lt;/p>
&lt;h2 id="邮件配置">邮件配置
&lt;/h2>&lt;p>邮件的配置网上有很多教程，比如使用WP Mail SMTP插件，这里就跳过了。&lt;/p>
&lt;h2 id="telegram配置">Telegram配置
&lt;/h2>&lt;p>其实使用邮件配置就可以了，当有登录的时候就会通过邮件来通知我们。我这里并不想在自己的邮箱里留存太多的邮件，而且自己用Telegram比较多，就想着把通知发送Telegram会更好，我就安装了插件：WP Telegram。功能也很强，它能在要发邮件的时候劫持邮件内容到telegram:&lt;img src="https://www.iminling.com/wp-content/uploads/2023/09/aef44f2535eb8f68f09d56ddfc002c94.png"
loading="lazy"
>&lt;/p>
&lt;p>只需要在Telegram申请好机器人就可以了，插件中也有申请步骤。&lt;/p>
&lt;h2 id="发送配置">发送配置
&lt;/h2>&lt;p>编辑主题文件中的functions.php文件[外观-主题文件编辑器]，在文件末尾添加以下代码就可以实现了：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/*****************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 函数名称：wp_login_notify v1.0 by DH.huahua.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 函数作用：有登录wp后台就会email通知博主
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">******************************************************/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function wp_login_notify()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> date_default_timezone_set(&amp;#39;PRC&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $admin_email = get_bloginfo (&amp;#39;admin_email&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $to = $admin_email;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $subject = &amp;#39;你的博客空间登录提醒&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $message = &amp;#39;&amp;lt;p&amp;gt;你好！你的博客空间(&amp;#39; . get_option(&amp;#34;blogname&amp;#34;) . &amp;#39;)有登录！&amp;lt;/p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;请确定是您自己的登录，以防别人攻击！登录信息如下：&amp;lt;/p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录名：&amp;#39; . $_POST[&amp;#39;username&amp;#39;] . &amp;#39;&amp;lt;p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录密码：&amp;#39; . $_POST[&amp;#39;password&amp;#39;] . &amp;#39;&amp;lt;p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录时间：&amp;#39; . date(&amp;#34;Y-m-d H:i:s&amp;#34;) . &amp;#39;&amp;lt;p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录IP：&amp;#39; . $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;] . &amp;#39;&amp;lt;p&amp;gt;&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $wp_email = &amp;#39;no-reply@&amp;#39; . preg_replace(&amp;#39;#^www\.#&amp;#39;, &amp;#39;&amp;#39;, strtolower($_SERVER[&amp;#39;SERVER_NAME&amp;#39;]));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $from = &amp;#34;From: \&amp;#34;&amp;#34; . get_option(&amp;#39;blogname&amp;#39;) . &amp;#34;\&amp;#34; &amp;lt;$wp_email&amp;gt;&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $headers = &amp;#34;$from\nContent-Type: text/html; charset=&amp;#34; . get_option(&amp;#39;blog_charset&amp;#39;) . &amp;#34;\n&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wp_mail( $to, $subject, $message, $headers );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add_action(&amp;#39;wp_login&amp;#39;, &amp;#39;wp_login_notify&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/*****************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 函数名称：wp_login_failed_notify v1.0 by DH.huahua.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 函数作用：有错误登录wp后台就会email通知博主
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">******************************************************/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function wp_login_failed_notify()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> date_default_timezone_set(&amp;#39;PRC&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $admin_email = get_bloginfo (&amp;#39;admin_email&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $to = $admin_email;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $subject = &amp;#39;你的博客空间登录错误警告&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $message = &amp;#39;&amp;lt;p&amp;gt;你好！你的博客空间(&amp;#39; . get_option(&amp;#34;blogname&amp;#34;) . &amp;#39;)有登录错误！&amp;lt;/p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;请确定是您自己的登录失误，以防别人攻击！登录信息如下：&amp;lt;/p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录名：&amp;#39; . $_POST[&amp;#39;username&amp;#39;] . &amp;#39;&amp;lt;p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录密码：&amp;#39; . $_POST[&amp;#39;password&amp;#39;] . &amp;#39;&amp;lt;p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录时间：&amp;#39; . date(&amp;#34;Y-m-d H:i:s&amp;#34;) . &amp;#39;&amp;lt;p&amp;gt;&amp;#39; .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;p&amp;gt;登录IP：&amp;#39; . $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;] . &amp;#39;&amp;lt;p&amp;gt;&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $wp_email = &amp;#39;no-reply@&amp;#39; . preg_replace(&amp;#39;#^www\.#&amp;#39;, &amp;#39;&amp;#39;, strtolower($_SERVER[&amp;#39;SERVER_NAME&amp;#39;]));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $from = &amp;#34;From: \&amp;#34;&amp;#34; . get_option(&amp;#39;blogname&amp;#39;) . &amp;#34;\&amp;#34; &amp;lt;$wp_email&amp;gt;&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $headers = &amp;#34;$from\nContent-Type: text/html; charset=&amp;#34; . get_option(&amp;#39;blog_charset&amp;#39;) . &amp;#34;\n&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wp_mail( $to, $subject, $message, $headers );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add_action(&amp;#39;wp_login_failed&amp;#39;, &amp;#39;wp_login_failed_notify&amp;#39;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一个是登录成功的提醒，一个是登录失败的提醒，如果有人登录wordpress后台的时候就会在telegram的机器人中进行通知：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">🔔‌你的博客空间登录提醒🔔
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">你好！你的博客空间(分享)有登录！
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请确定是您自己的登录，以防别人攻击！登录信息如下：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">登录名：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">登录密码：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">登录时间：2023-09-29 16:02:40
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">登录IP：24:4:2::
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>经过上边的配置，就可以在有人登录worpress后台的时候及时的通知我们，避免出现我上次遇到的情况，相对来说避免发生一些自己预想以外的事情。&lt;/p></description></item><item><title>禁用xmlrpc.php防止wordpress被暴力破解</title><link>https://www.iminling.com/2023/disable-xmlrpc-php/</link><pubDate>Sun, 03 Sep 2023 09:07:36 +0000</pubDate><guid>https://www.iminling.com/2023/disable-xmlrpc-php/</guid><description>&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/09/xmlrpc-wordpress.jpg"
loading="lazy"
>&lt;/p>
&lt;p>很多刚接触wordpress的朋友估计和我一样，对于xmlrpc.php的了解几乎为0，这玩意儿是干嘛的？为什么它会导致wordpress被暴力破解？下面我们就先来认识一下xmlrpc.php是个什么东西。&lt;/p>
&lt;h2 id="什么是xmlrpcphp">什么是xmlrpc.php
&lt;/h2>&lt;p>XML-RPC是支持WordPress与其他系统之间通信的规范。它通过使用HTTP作为传输机制和XML作为编码机制来标准化这些通信来实现此目的。例如，假设您想通过移动设备在您的网站上发帖，因为您的计算机不在附近。 您可以使用 xmlrpc.php 启用的远程访问功能来做到这一点。&lt;/p>
&lt;p>在WordPress的早期版本中，默认情况下已关闭XML-RPC。但是自v3.5版本开始，默认情况下又启用它。这样做的主要原因是允许WordPress移动应用程序与WordPress安装进行对话通讯。&lt;/p>
&lt;p>但是由于REST API已集成到WordPress核心中，因此xmlrpc.php文件不再用于此通信。相反，REST API用于与WordPress移动应用程序，桌面客户端，其他博客平台，WordPress.com（用于Jetpack插件）以及其他系统和服务进行通信。REST API-可与之交互的系统范围比xmlrpc.php所允许的大得多。此外，拥有更强的灵活性。&lt;/p>
&lt;h2 id="经历">经历
&lt;/h2>&lt;p>为什么我会知道这个玩意儿呢？因为在某一天的早上，我发现我的网站突然就多了两篇文章，并不是我写的，莫名其妙的就多了两篇，于是马上修改了管理用户的登录密码，防止别人再登录。之后便开始了此次被攻击的思考，我的密码设置的也并不简单，他们是怎么知道我的密码的呢？于是我就开始了查看请求日志，在nginx的日志中果然发现了一些端倪，有大量的请求在请求xmlrpc.php这个文件：&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/09/2483c29419769aa149fc2cfcd9a35773.png"
loading="lazy"
>&lt;/p>
&lt;p>于是我就去搜索了xmlrpc.php这个文件，不搜索不知道，一搜索吓一跳，md，肯定是这玩意儿导致我的网站多了两篇文章出来。于是开始了探索如何禁用之路。&lt;/p>
&lt;h2 id="禁用xmlrpcphp">禁用xmlrpc.php
&lt;/h2>&lt;p>既然wordpress出了REST API取代XML-RPC，为了安全我们应该在站点上禁用xmlrpc.php。接下来介绍三种禁用的方案。&lt;/p>
&lt;h3 id="通过nginx过滤请求">通过nginx过滤请求
&lt;/h3>&lt;p>这种是我在使用的方案，通过nginx的location来定位这个请求，然后相应403，禁止请求访问。关于location的用法，参考我的另一篇文章：&lt;a class="link" href="https://www.iminling.com/2023/08/30/224.html" title="nginx中location使用方法总结"
target="_blank" rel="noopener"
>nginx中location使用方法总结&lt;/a>。在处理wordpress站点的server代码块中添加以下代码来阻止其他人访问xmlrpc.php:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">location ~* ^/xmlrpc\.php$ {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return 403;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加以后，再有人访问xmlrpc.php文件的时候就会返回403.&lt;/p>
&lt;h3 id="通过functionsphp禁用">通过functions.php禁用
&lt;/h3>&lt;p>刚开始我使用的就是这种方式来禁用的，但是在更新了主题文件后，设置丢失了，所以就换成了nginx来进行拦截，这里也顺带说一下这种方式。在后台中，找到外观-主题文件编辑器菜单，然后点击右侧的functions.php,在编辑区将以下方法添加进去保存文件就可以了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">add_filter(&amp;#39;xmlrpc_enabled&amp;#39;, &amp;#39;__return_false&amp;#39;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存后，就没办法再访问xmlrpc.php文件了。&lt;/p>
&lt;h3 id="通过htaccess-文件禁用">通过.htaccess 文件禁用
&lt;/h3>&lt;p>.htaccess文件在/var/www/html目录下，是一个隐藏文件，我们编辑这个文件，在文件中添加以下内容来达到屏蔽xmlrpc.php文件的目的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># Block WordPress xmlrpc.php requests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;Files xmlrpc.php&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">order deny,allow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">deny from all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">allow from xxx.xxx.xxx.xxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Files&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以禁用所有调用该文件的情况，但是可以设置例外，我们可以把允许的ip替换xxx.xxx.xxx.xxx来达到只允许特定的ip来访问该文件。&lt;/p>
&lt;p>以上就是我因为xmlrpc.php文件遭遇到的问题以及针对这种情况进行的防御，希望可以帮到大家。&lt;/p></description></item><item><title>docker搭建wordpress教程</title><link>https://www.iminling.com/2023/docker-install-wordpress/</link><pubDate>Tue, 07 Mar 2023 06:59:39 +0000</pubDate><guid>https://www.iminling.com/2023/docker-install-wordpress/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=U3grOTJQSUZnQ1N0T2hlU0gydlRwbGdXalNiNmdMSGl4Rk1XNTF2dE0ydlpydmFkZXA0WFhsUEZ5d0o5MnZ4c2tHTkEzSm89" alt="Featured image of post docker搭建wordpress教程" />&lt;p>搭建一个wordpress网站。本文主要介绍使用docker搭建一个完整的wordpress网站。&lt;/p>
&lt;p>安装docker就不做多介绍了.&lt;/p>
&lt;p>准备wordpress的docker-compose.yaml文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3.9&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mynet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">wordpress&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># default port 9000 (FastCGI)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">wordpress:6.1.0-fpm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">wordpress&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">.env&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mynet&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">${WORDPRESS_LOCAL_HOME}:/var/www/html&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">${WORDPRESS_UPLOADS_CONFIG}:/usr/local/etc/php/conf.d/uploads.ini&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - /path/to/repo/myTheme/:/var/www/html/wp-content/themes/myTheme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">WORDPRESS_DB_USER=${WORDPRESS_DB_USER}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.22.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">.env&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mynet&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">wordpress&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;80:80&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">${WORDPRESS_LOCAL_HOME}:/var/www/html&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./nginx/default.conf:/etc/nginx/conf.d/default.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./logs:/var/log/nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用官方的6.1.0版本的镜像，把文件中的数据库的信息改成自己的就可以正常启动了。
端口这里没有暴露出来，因为我想使用nginx来处理所有请求，所以还需要配置一下nginx的代理规则：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">server &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 80&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen &lt;span class="o">[&lt;/span>::&lt;span class="o">]&lt;/span>:80&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name &lt;span class="si">${&lt;/span>&lt;span class="nv">HOST&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index index.php index.html index.htm&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> root /var/www/html&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_tokens off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> client_max_body_size 75M&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># update ssl files as required by your deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#ssl_certificate /etc/ssl/fullchain.pem;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#ssl_certificate_key /etc/ssl/privkey.pem;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># logging&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> access_log /var/log/nginx/wordpress.access.log&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> error_log /var/log/nginx/wordpress.error.log&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># some security headers ( optional )&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add_header X-Frame-Options &lt;span class="s2">&amp;#34;SAMEORIGIN&amp;#34;&lt;/span> always&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add_header X-XSS-Protection &lt;span class="s2">&amp;#34;1; mode=block&amp;#34;&lt;/span> always&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add_header X-Content-Type-Options &lt;span class="s2">&amp;#34;nosniff&amp;#34;&lt;/span> always&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add_header Referrer-Policy &lt;span class="s2">&amp;#34;no-referrer-when-downgrade&amp;#34;&lt;/span> always&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add_header Content-Security-Policy &lt;span class="s2">&amp;#34;default-src * data: &amp;#39;unsafe-eval&amp;#39; &amp;#39;unsafe-inline&amp;#39;&amp;#34;&lt;/span> always&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location / &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try_files &lt;span class="nv">$uri&lt;/span> &lt;span class="nv">$uri&lt;/span>/ /index.php&lt;span class="nv">$is_args$args&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location ~ &lt;span class="se">\.&lt;/span>php$ &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try_files &lt;span class="nv">$uri&lt;/span> &lt;span class="o">=&lt;/span> 404&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fastcgi_split_path_info ^&lt;span class="o">(&lt;/span>.+&lt;span class="se">\.&lt;/span>php&lt;span class="o">)(&lt;/span>/.+&lt;span class="o">)&lt;/span>$&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fastcgi_pass wordpress:9000&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fastcgi_index index.php&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> include fastcgi_params&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fastcgi_param SCRIPT_FILENAME &lt;span class="nv">$document_root$fastcgi_script_name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fastcgi_param PATH_INFO &lt;span class="nv">$fastcgi_path_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location ~ /&lt;span class="se">\.&lt;/span>ht &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deny all&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">location&lt;/span> &lt;span class="o">=&lt;/span> /favicon.ico &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_not_found off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> access_log off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">location&lt;/span> &lt;span class="o">=&lt;/span> /favicon.svg &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_not_found off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> access_log off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">location&lt;/span> &lt;span class="o">=&lt;/span> /robots.txt &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_not_found off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> access_log off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> allow all&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location ~* &lt;span class="se">\.&lt;/span>&lt;span class="o">(&lt;/span>css&lt;span class="p">|&lt;/span>gif&lt;span class="p">|&lt;/span>ico&lt;span class="p">|&lt;/span>jpeg&lt;span class="p">|&lt;/span>jpg&lt;span class="p">|&lt;/span>js&lt;span class="p">|&lt;/span>png&lt;span class="o">)&lt;/span>$ &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> expires max&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_not_found off&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>完成后就可以使用域名来访问了。&lt;/p>
&lt;p>也可以参考我的github仓库中的docker-compose.yaml文件：&lt;a class="link" href="https://github.com/konghanghang/images/tree/master/wordpress" target="_blank" rel="noopener"
>wordpress&lt;/a>&lt;/p></description></item></channel></rss>