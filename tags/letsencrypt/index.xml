<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Letsencrypt on 记录点滴 - 分享</title><link>https://konghanghang.github.io/iminling-pages/tags/letsencrypt/</link><description>Recent content in Letsencrypt on 记录点滴 - 分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>iminling.com</copyright><lastBuildDate>Sun, 30 Jul 2023 00:21:32 +0000</lastBuildDate><atom:link href="https://konghanghang.github.io/iminling-pages/tags/letsencrypt/index.xml" rel="self" type="application/rss+xml"/><item><title>docker部署certbot申请Let’s Encrypt证书</title><link>https://konghanghang.github.io/iminling-pages/2023/docker-use-certbot-apply-lets-encrypt/</link><pubDate>Sun, 30 Jul 2023 00:21:32 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2023/docker-use-certbot-apply-lets-encrypt/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=UVQ4dnZwSDJWNWNTTFNwWXo3QUxlM2wvcFhCdGEyU1diN0lUbGVKZ0gxQXExdFFJV2FIazdvVEorM0Vsak5xWFNDQ1FVNVU9" alt="Featured image of post docker部署certbot申请Let’s Encrypt证书" />&lt;p>最近想给域名申请一个免费的证书，经过查询找到了Let&amp;rsquo;s Encrypt，并且可以使用certbot来申请，因为一直在使用docker,所以就想着看是否可以使用docker来进行证书的申请，于是就开启了此次的折腾之路：使用docker部署certbot申请Let&amp;rsquo;s Encrypt证书。&lt;/p>
&lt;h2 id="安装certbot">安装certbot
&lt;/h2>&lt;p>certbot的安装方式有很多种，官方也有一些系统的安装文档，可以根据官方的安装文档来直接安装到对应的操作系统上：&lt;a class="link" href="https://certbot.eff.org/instructions" target="_blank" rel="noopener"
>installation&lt;/a>，非常详细。官方推荐的方式是通过&lt;code>snap&lt;/code>的形式来安装，另外还有&lt;code>docker&lt;/code>、&lt;code>pip&lt;/code>、&lt;code>第三放发行版本&lt;/code>以及&lt;code>certbot-auto(官方已经标示为过期)&lt;/code>。&lt;/p>
&lt;h2 id="申请形式">申请形式
&lt;/h2>&lt;p>申请证书的形式也有很多:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#apache" target="_blank" rel="noopener"
>apache&lt;/a>{#id9.reference.internal}&lt;/li>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#webroot" target="_blank" rel="noopener"
>Webroot&lt;/a>{#id10.reference.internal}&lt;/li>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#nginx" target="_blank" rel="noopener"
>Nginx&lt;/a>{#id11.reference.internal}&lt;/li>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#standalone" target="_blank" rel="noopener"
>Standalone&lt;/a>{#id12.reference.internal}&lt;/li>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#dns-plugins" target="_blank" rel="noopener"
>DNS Plugins&lt;/a>{#id13.reference.internal}&lt;/li>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#manual" target="_blank" rel="noopener"
>Manual&lt;/a>{#id14.reference.internal}&lt;/li>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#combining-plugins" target="_blank" rel="noopener"
>Combining plugins&lt;/a>{#id15.reference.internal}&lt;/li>
&lt;li>&lt;a class="link" href="https://eff-certbot.readthedocs.io/en/stable/using.html#third-party-plugins" target="_blank" rel="noopener"
>Third-party plugins&lt;/a>{#id16.reference.internal}&lt;/li>
&lt;/ul>
&lt;p>其中一些方式要配合开启80和443端口来实现，还需要进行域名解析，我这里就选择使用&lt;code>DNS Plugins&lt;/code>的形式来进行申请，因为域名在cloudflare，所以就使用&lt;code>certbot-dns-cloudflare&lt;/code>插件来进行申请，文档地址：&lt;a class="link" href="https://certbot-dns-cloudflare.readthedocs.io/en/stable/" target="_blank" rel="noopener"
>Welcome to certbot-dns-cloudflare’s documentation!&lt;/a>。&lt;/p>
&lt;h2 id="申请准备">申请准备
&lt;/h2>&lt;p>docker文件的目录如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">├── certs //存放证书
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── cloudflare.ini //配置文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── logs //日志
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yml //docker-compse文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── .env //环境变量信息
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="certs">certs
&lt;/h3>&lt;p>目录是映射到docker容器中的，存放证书文件。&lt;/p>
&lt;h3 id="cloudflareini">cloudflare.ini
&lt;/h3>&lt;p>该要存放cloudflare的api token,这里使用的是自己创建的token，配置文件内容如下：&lt;/p>
&lt;pre class="core-next-code-pre">&lt;code>dns_cloudflare_api_token = your_cloudflare_api_key&lt;/code>&lt;/pre>
&lt;p>具体的生成方式看下图：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=bXFYU3d3Tll0N0VuR3NRbURGdVlKeGVWK2NXZzlzMW51ejZqSHRuUjFOVEJYZVpqSzdiMWtpOCswWXF4WUlBRzFnbXg1ZG89"
loading="lazy"
>&lt;/p>
&lt;p>选择创建令牌：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=T2lrU0Nic2NsQWg4UTk4czJuWm5rZVJKeTRjcTI0K0RPVEFUdzlqOWJVY1R5dGE3bFVlbk9KMmFZc1lYRlQweGVmYngxL0E9"
loading="lazy"
>&lt;/p>
&lt;p>区域中选择DNS给一个编辑权限，然后就是区域字段选择自己的域名，我这里是给每个域名单独的token，所以需要选择一个域名，可以根据自己需求选择。&lt;/p>
&lt;h3 id="logs">logs
&lt;/h3>&lt;p>logs中是存在certbot执行日志的地方。&lt;/p>
&lt;h3 id="docker-composeyaml">docker-compose.yaml
&lt;/h3>&lt;p>docker-compose.yaml文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">certbot&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certbot/dns-cloudflare:v2.4.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certbot&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">.env&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./certs:/etc/letsencrypt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./logs:/var/log/letsencrypt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./conf/cloudflare.ini:/secrets/cloudflare.ini&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># dry run&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># command: certonly --dns-cloudflare --agree-tos --non-interactive --dns-cloudflare-credentials /secrets/cloudflare.ini --email ${CERTBOT_EMAIL} --dns-cloudflare-propagation-seconds 20 -d ${CERTBOT_DOMAIN} --dry-run&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># issue --force-renewal&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certonly --dns-cloudflare --agree-tos --non-interactive --dns-cloudflare-credentials /secrets/cloudflare.ini --email ${CERTBOT_EMAIL} --dns-cloudflare-propagation-seconds 20 -d ${CERTBOT_DOMAIN}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># renew&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># command: renew --dns-cloudflare --no-self-upgrade --agree-tos --non-interactive --dns-cloudflare-credentials /secrets/cloudflare.ini --dns-cloudflare-propagation-seconds 20&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用.env配置文件，然后把certbot中的/etc/letsencrypt目录映射到容器外部的certs目录，另外就是日志以及cloudflare的配置文件。&lt;/p>
&lt;p>执行的命令有三个，dry-run是测试申请功能是否正常，如果正常则使用issue的命令进行正常申请，因为申请的证书只有三个月的有效期，所以需要进行续期，续期使用renew的命令。&lt;/p>
&lt;p>&amp;ndash;agree-tos 同意tos(term of service)&lt;/p>
&lt;p>&amp;ndash;non-interactive 非交互式的&lt;/p>
&lt;p>&amp;ndash;dns-cloudflare-credentials 指定cloudflare的token文件位置&lt;/p>
&lt;p>&amp;ndash;eamil 邮箱&lt;/p>
&lt;p>&amp;ndash;dns-cloudfalre-propagation-seconds 等待时间&lt;/p>
&lt;p>-d 指定需要申请证书的域名，如果有多个域名则指定多个-d参数。如果需要申请泛域名证书，则使用*.xxx.com，生成的证书会在xxx.com目录下。&lt;/p>
&lt;h3 id="env">.env
&lt;/h3>&lt;p>env文件是一些配置信息，如上边的docker-compose.yaml文件中有两个动态的参数，一个是邮箱，另一个是申请证书的域名，我们就是在.env文件中指定的，内容如下：&lt;/p>
&lt;pre class="core-next-code-pre">&lt;code>CERTBOT_DOMAIN=your_domain_name
CERTBOT_EMAIL=your_email&lt;/code>&lt;/pre>
&lt;p>指定邮箱和域名就可以了。&lt;/p>
&lt;h2 id="申请"> 申请
&lt;/h2>&lt;p>经过上边的文件准备，接下来就可以开始申请了，使用docker compose up 来进行申请。申请后的证书就在certs目录下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">├── 1.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── accounts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── archive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── live
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── renewal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── renewal-hooks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── ssl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>证书文件在live下。然后我们就可以在nginx中使用我们申请的证书文件了。&lt;/p>
&lt;h2 id="续期">续期
&lt;/h2>&lt;p>证书三个月的有效期，在快要过期的时候需要进行续期，续期则使用docker-compose.yaml文件中的续期命令就可以了。大家也可以做一个corn定时任务来进行定期续期。&lt;/p>
&lt;p>最后祝大家申请顺利。&lt;/p></description></item></channel></rss>