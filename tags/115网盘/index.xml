<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>115网盘 on 记录点滴 - 分享</title><link>https://konghanghang.github.io/iminling-pages/tags/115%E7%BD%91%E7%9B%98/</link><description>Recent content in 115网盘 on 记录点滴 - 分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>iminling.com</copyright><lastBuildDate>Sat, 04 Jan 2025 09:48:58 +0000</lastBuildDate><atom:link href="https://konghanghang.github.io/iminling-pages/tags/115%E7%BD%91%E7%9B%98/index.xml" rel="self" type="application/rss+xml"/><item><title>私人影院之emby安装配置以及通过embyExternalUrl实现302播放</title><link>https://konghanghang.github.io/iminling-pages/2025/emby-install-and-configuration/</link><pubDate>Sat, 04 Jan 2025 09:48:58 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2025/emby-install-and-configuration/</guid><description>&lt;p>前两篇文章先讲了如何&lt;a class="link" href="https://www.iminling.com/2024/build-alist-server" title="私人影院之搭建自己的alist服务端并添加常见网盘"
target="_blank" rel="noopener"
>安装alist并添加常见网盘&lt;/a>，以及如何&lt;a class="link" href="https://www.iminling.com/2024/install-rclone-and-configuration" title="私人影院之rclone安装以及通过WebDav配置alist"
target="_blank" rel="noopener"
>把alist通过rclone挂载在本地硬盘&lt;/a>实现像本地文件一样进行浏览，本篇文章咱们继续，介绍如何安装emby并对媒体进行添加进emby.&lt;/p>
&lt;h2 id="emby安装">emby安装
&lt;/h2>&lt;p>要安装&lt;code>emby&lt;/code>首先要面临的就是&lt;code>emby&lt;/code>版本选择问题，&lt;code>emby&lt;/code>本身是一个收费软件，但是也有大佬们的破解版本，我这里选择&lt;code>amilys/embyserver&lt;/code> 这个版本，可以去&lt;a class="link" href="https://hub.docker.com/r/amilys/embyserver" target="_blank" rel="noopener"
>docker hub官方地址&lt;/a>查看。确认镜像后，下边给出我的&lt;code>docker-compose.yaml&lt;/code>配置文件:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">networks:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mynet:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> external: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">services:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> emby:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> image: amilys/embyserver
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> container_name: emby
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> volumes:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - ./config:/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - /data/movies:/data/movies:rslave
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ports:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - 8096:8096
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> extra_hosts:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - host.docker.internal:host-gateway
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> networks:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - mynet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>network不再多说了，自己创建的一个桥接网络。&lt;/p>
&lt;p>端口暴露&lt;code>8096&lt;/code>出去，&lt;/p>
&lt;p>&lt;code>emby&lt;/code>的配置文件在&lt;code>/config&lt;/code>目录，把它挂载到本地方便后续进行修改。&lt;/p>
&lt;p>另外一个挂载路径就是本地的&lt;code>/data/movies&lt;/code>挂载到容器的&lt;code>/data/movies&lt;/code>目录。本地的&lt;code>/data/movies&lt;/code>其实就是&lt;a class="link" href="https://www.iminling.com/2024/install-rclone-and-configuration" title="私人影院之rclone安装以及通过WebDav配置alist"
target="_blank" rel="noopener"
>上篇文章通过rclone处理的alist中所有的文件&lt;/a>。这里建议设置为一样的路径，方便后续在302播放的时候替换，不会遇到那么多麻烦。&lt;/p>
&lt;p>整体目录如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">root@docker:~/emby# tree -L 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就是启动容器&lt;code>docker compose up -d&lt;/code>进行&lt;code>emby&lt;/code>的配置了。&lt;/p>
&lt;h2 id="emby初始化">emby初始化
&lt;/h2>&lt;p>启动容器后，可以通过&lt;code>ip:8096&lt;/code>来访问刚启动的容器。下边来进行&lt;code>emby&lt;/code>的一些初始化配置，首先是进行语言配置，选择&lt;code>chinese simplified&lt;/code>(简体中文)，下一步&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/343bcb276a9239cfbfe2632f98431869.webp"
loading="lazy"
alt="welcome to emby"
>][4]&lt;/p>
&lt;p>设置完语言后就会提示创建用户,根据自己的需求创建用户以及设置用户名和密码。然后继续下一步&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/e34079b58c84d358b0b10600010bf47d.webp"
loading="lazy"
alt="emby create first user"
>][5]&lt;/p>
&lt;p>之后就会让添加一个媒体库，这里可以先不添加，直接下一步，等完全配置好了之后再去配置媒体库相关的东西&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/2850a779022a9f2d21557087d95c4918.webp"
loading="lazy"
alt="emby setup media libraries"
>][6]&lt;/p>
&lt;p>接下来是设置媒体库的偏好语言和地区，根据自己需求英文或者中文&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/5e7ca76938cf51d75aea26d7ede69d5d.webp"
loading="lazy"
alt="emby preferred metadata language"
>][7]&lt;/p>
&lt;p>下边是配置远程访问，开启就好了&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/75dd4f38f84ba4fcf93236952cc6db3c.webp"
loading="lazy"
alt="emby configure remote access"
>][8]&lt;/p>
&lt;p>下边是使用条例，接收继续下一步&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/b8b47310ae3e310e234c62e76082063a.webp"
loading="lazy"
alt="emby terms of use"
>][9]&lt;/p>
&lt;p>终于完成了,点击finish跳转。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/482385e097fb3168905c196ccbd5de0d.webp"
loading="lazy"
alt="emby set done"
>][10]&lt;/p>
&lt;p>经过上边设置，emby就算是初始化好了，接下来就可以进行媒体库添加了。&lt;/p>
&lt;h2 id="媒体库">媒体库
&lt;/h2>&lt;p>进入到emby后台，找到媒体库菜单，就可以在这里进行添加媒体库了。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/d2d55907036a51dcfebbfcb5bf16e67d.webp"
loading="lazy"
alt="emby 媒体库"
>][11]&lt;/p>
&lt;p>添加媒体库时需要整理好分类,是电影、电视节目还是其他，方便emby正确刮削。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/26e630de1ab04c0f135433a22a44b09d.webp"
loading="lazy"
alt="emby add lib"
>][12]&lt;/p>
&lt;p>根据情况配置上边的选项，配置好后emby就会开始进行刮削，完整后就可以在emby首页看到添加的目录下的所有电影了。截止到现在emby已经可以正确的播放视频了，但是此时播放网盘的内容是会经过搭建alist那台机器，等于是那台机器把媒体内容下载下来，然后送给我们的播放器进行播放，如果alist部署在本地播放倒是什么没什么，反正都要下载下来。如果alist部署在其他vps上，流量消耗是一个比较大的问题。如果是部署在家里但是需要在家庭以外的地方播放，这时候流量也会经过家里然后才到你在外边的设备，播放速度就取决于你的家庭宽带的上行了，一般上行所以都不会太大，所以我们需要配置302重定向，让播放设备直接和网盘进行交互，而alist服务器只是负责给你列出目录树，供我们浏览使用。下边就来讲一下如何进行302播放。&lt;/p>
&lt;h2 id="embyexternalurl实现302播放">embyExternalUrl实现302播放
&lt;/h2>&lt;p>本文主要介绍使用&lt;a class="link" href="https://github.com/bpking1/embyExternalUrl" target="_blank" rel="noopener"
>embyExternalUrl&lt;/a>工具进行302播放。有大佬做了整合，弄了一个docker镜像：&lt;a class="link" href="https://github.com/thsrite/MediaLinker" target="_blank" rel="noopener"
>MediaLinker&lt;/a>，降低了操作的复杂度，并且支持ssl证书，可以根据需求进行配置。docker compose文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">services:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> medialinker:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> container_name: medialinker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> image: thsrite/medialinker:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> volumes:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - ./data/:/opt/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> environment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - AUTO_UPDATE=true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - SERVER=emby
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - NGINX_PORT=8091
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> network_mode: host
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>具体环境信息可以看大佬的介绍，我这里使用emby且也不需要SSL，如上是最简单的配置了。启动后，在data目录下会有一个constant.js文件，我们需要改变其中emby、alist的一些配置，需要配置的地方如下图：&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/6ccb5a1219098a3aaad0ec5b57963782.webp"
loading="lazy"
alt="embyExternalUrl setting"
>][15]&lt;/p>
&lt;p>根据上图可以看到有7项信息需要填写，主要分为两个大项，一个是emby的配置，一个是alist的配置。下边来详细说一下每个参数的配置。&lt;/p>
&lt;h3 id="emby配置">emby配置
&lt;/h3>&lt;p>emby需要三个参数，embyhost这个简单，就是我们打开emby的地址，安装的机器ip和docker-compose文件中的端口就可以了。&lt;/p>
&lt;p>embyApiKey需要在emby的后台去获取，路径如下，新建一个api密钥，然后填进去就可以了。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/5c528a2719806da84c7a86ab030b801d.webp"
loading="lazy"
alt="emby api key"
>][16]&lt;/p>
&lt;p>mediaMountPath文件中介绍的也比较清楚：&lt;/p>
&lt;blockquote>
&lt;p>// 挂载工具 rclone/CD2 多出来的挂载目录, 例如将 od,gd 挂载到 /mnt 目录下: /mnt/onedrive /mnt/gd ,那么这里就填写 /mnt
// 通常配置一个远程挂载根路径就够了,默认非此路径开头文件将转给原始 emby 处理
// 如果没有挂载,全部使用 strm 文件,此项填[&amp;quot;&amp;quot;],必须要是数组&lt;/p>&lt;/blockquote>
&lt;p>我们在上边安装alis和emby的时候，两个内部路径都是&lt;code>/data/movies&lt;/code>，那么这个数组中就填&lt;code>/data/movies&lt;/code>.&lt;/p>
&lt;p>emby的配置就完成了。&lt;/p>
&lt;h3 id="alist配置">alist配置
&lt;/h3>&lt;p>host也比较简单，我们怎么访问alist的就怎么写，一般是ip:5244.&lt;/p>
&lt;p>alist-token的获取路径如下：&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/76f65a9b6c5bd8cf02ba0266985968c3.webp"
loading="lazy"
alt="alist api key"
>][17]&lt;/p>
&lt;p>然后是否启用了sign，这个在往alist配置每个网盘的时候，我这边都是有开启的，所以这个参数我需要设置为true.&lt;/p>
&lt;p>签名有效期，按照他提供的路径也很容易找到，默认是0，我这里也把他改成12，两边同步。&lt;/p>
&lt;p>然后保存&lt;code>constant.js&lt;/code>文件，此时需要再对&lt;code>medialinker&lt;/code>容器进行一次重启，如果不重启，mediaMountPath不生效。&lt;/p>
&lt;p>如何判断是否成功了呢？可以查看medialinker的日志，&lt;code>docker compose logs -tf&lt;/code> 来查看。如下我在第一次没有重启的情况去播放视频，看到有以下日志，找的还是默认的/mnt路径，并且可以看到我的服务器流量在疯狂的跑下行流量，说明是通过服务器下载后转给我的。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/fe642d056ec75e3408f5fd37bce9cb12.webp"
loading="lazy"
alt="emby 302 error"
>][18]&lt;/p>
&lt;p>经过对容器进行重启后，再次去播放视频，可以看到以下日志，读取到了我配置的/data/movies.&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/04/3aa7c6fb04522303a5beb093a11f7eab.webp"
loading="lazy"
alt="emby 302 success"
>][19]&lt;/p>
&lt;p>经过以上就可以愉快的302直接播放云盘中的视频了。希望可以帮到大家。&lt;/p></description></item><item><title>私人影院之搭建自己的alist服务端并添加常见网盘</title><link>https://konghanghang.github.io/iminling-pages/2024/build-alist-server/</link><pubDate>Sat, 21 Sep 2024 09:56:03 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2024/build-alist-server/</guid><description>&lt;p>前段时间写了一篇如何&lt;a class="link" href="https://www.iminling.com/2024/how-to-build-xiaoya-alist-and-use" title="搭建属于自己的影视小站：小雅Alist安装及使用"
target="_blank" rel="noopener"
>搭建小雅alist&lt;/a>的文章，使用小雅的媒体库来进行观影，但是这种有一个问题就是小雅的库更新的不是很快，而且如果我想在电视上观看比较麻烦，就算搭配emby,也无法避免资源更新慢的问题。所以就想着使用自己的网盘配合自己搭建的alist服务端，来进行资源快速入库，方便自己快速观看。那么接下来就详细说明一下自己的搭建过程。&lt;/p>
&lt;h2 id="alist服务端">alist服务端
&lt;/h2>&lt;p>我这里使用&lt;code>docker compose&lt;/code>来搭建&lt;code>alist server&lt;/code>,alist提供了两个版本的镜像，一个是普通的版本，一个是带aria2下载的版本，根据自己的需求进行安装，安装文档参考&lt;a class="link" href="https://alist.nn.ci/zh/guide/install/docker.html" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;p>我的docker-compose.yaml如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">networks:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mynet:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> external: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">services:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alist:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> image: xhofe/alist-aria2:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> container_name: alist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> volumes:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - ./data:/opt/alist/data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> networks:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - mynet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ports:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - 15244:5244
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> extra_hosts:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - host.docker.internal:host-gateway
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> environment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - PUID=0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - PGID=0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - UMASK=022
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - TZ=Asia/Shanghai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我的目录分配如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>整体配置是比较简单的，我使用了自己的网络&lt;code>mynet&lt;/code>，而不是让docker自建一个网络，方便后续容器之间的项目访问。&lt;/p>
&lt;p>按照上边配置好后直接&lt;code>docker compose up -d&lt;/code>运行起来容器。之后通过访问ip:15244(我这里映射到主机的15244端口了)，默认admin用户和密码，进行登录并修改密码。容器启动成功，alist的服务端搭建就算完成了。&lt;/p>
&lt;h2 id="网盘添加">网盘添加
&lt;/h2>&lt;p>我这里主要添加三种类型，天翼云盘，115网盘，本地smb，下边就看一下每种网盘是需要怎么来添加。&lt;/p>
&lt;h3 id="天翼云盘">天翼云盘
&lt;/h3>&lt;p>我家里使用的是电信的宽带，送了天翼网盘的会员，个人和家庭分别是4TB，整体也不算少。&lt;/p>
&lt;p>进入到alist的管理界面&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2024/09/12346FDFD92375CFACA05F8AE99636F2.png"
loading="lazy"
alt="alist disk"
>&lt;/p>
&lt;p>点击存储-添加,然后选择&lt;code>天翼云盘客户端&lt;/code>(官方建议的类型)。然后就可以看到很多选项需要填写，具体的填写操作步骤参考&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/189.html" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2024/09/643C95E88930EA3944C1185A24EBB379.png"
loading="lazy"
alt="alist add 189"
>&lt;/p>
&lt;p>挂载路径是最终显示在alist主页的名称，需要唯一。&lt;/p>
&lt;p>缓存过期时间根据自己的需求来定义，比如我添加了一个文件想要快一点能刷新出来，那么我就定义短一点(比如1分钟)，这个根据自己需求来定。&lt;/p>
&lt;p>WebDAV策略建议都使用302重定向，这样子在通过WebDAV访问alist服务端的内容的时候，实际上会重定向到网盘内真实的路径，等于直接访问网盘。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2024/09/35D3FFFECD6E46B2E2B13B4C3082C901.png"
loading="lazy"
alt="alist add 189"
>&lt;/p>
&lt;p>启用签名选项如果后续是需要配合emby实现302播放，&lt;strong>一定要打开，一定要打开，一定要打开&lt;/strong>。&lt;/p>
&lt;p>用户名就是天翼云盘登录的手机号。&lt;/p>
&lt;p>密码是天翼云盘登录的密码。&lt;/p>
&lt;p>根文件的id根据自己需求，如果只是想把网盘内的某一个目录添加到alist中，那就按照&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/189.html" target="_blank" rel="noopener"
>官方文档&lt;/a>里的方法找到对应的文件夹id。&lt;/p>
&lt;p>类型有&lt;code>家庭云&lt;/code>和&lt;code>个人云&lt;/code>，&lt;code>family id&lt;/code>在是选择&lt;code>家庭云&lt;/code>的时候需要填写，官网里都有介绍。我这里就是&lt;code>家庭云&lt;/code>。&lt;/p>
&lt;p>基本上述搞定就可以添加成功了。&lt;/p>
&lt;h3 id="115网盘">115网盘
&lt;/h3>&lt;p>基本和天翼云盘添加流程差不多，驱动类型选择&lt;code>115网盘&lt;/code>,挂载路径、缓存过期时间、WebDAV策略、启用签名四个选项和天翼云盘意向逻辑，进行处理就行了。有不明白的可以参考&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/115.html" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2024/09/3D235946E3F03628AFC314D9E2018E98.png"
loading="lazy"
alt="alist add 115"
>&lt;/p>
&lt;p>cookie和Qrcode二选一，&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/115.html#_1-qrcode-%E6%89%AB%E7%A0%81%E6%96%B9%E5%BC%8F%E7%99%BB%E5%BD%95" target="_blank" rel="noopener"
>官方文档&lt;/a>也有详细的介绍，包括根文件夹ID，都有详细的介绍，参考文档就可以了。感觉Qrcode会简单一点。我是直接使用的抓包软件抓的应用的cookie。这里有一个事项需要注意一下，如果使用了手机端软件，后续在网页登录的时候最好选择用手机扫码登录，要不然可能会把手机应用端挤掉导致cookie失效。&lt;/p>
&lt;h3 id="smb添加">SMB添加
&lt;/h3>&lt;p>有些文件没有放在网盘，而是放在自己本地或者放在本地nas中，比如我上篇文档也介绍了&lt;a class="link" href="https://www.iminling.com/2024/pve-install-nas" title="Proxmox VE(PVE)8.0安装黑群晖NAS并直通硬盘"
target="_blank" rel="noopener"
>如何安装黑群晖&lt;/a>，这样子想要在alist中把nas中的资源添加进去，就需要使用到SMB一些了，nas中是有开启这个功能的。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2024/09/6BFD9B721FB31AFA57FF87D6CF084938.png"
loading="lazy"
alt="alist add smb nas"
>&lt;/p>
&lt;p>添加驱动类型选择&lt;code>SMB&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2024/09/08EBBBA8CC68A83179643B66EBDB09EE.png"
loading="lazy"
alt="alist add smb nas"
>&lt;/p>
&lt;p>smb是本地文件，启用签名就可以不用开了。地址、用户名、密码和分享名称(smb中的目录)根据自己的需求填写就可以了。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>我这里介绍了三种网盘的添加方式，其他的网盘也都大同小异，比如添加阿里云盘等。那么搭建alist服务端并添加网盘，就介绍到这里。希望可以帮到大家。&lt;/p>
&lt;p>接下来还会介绍利用rclone挂载alist，然后让emby来使用并实现302播放。&lt;/p></description></item></channel></rss>