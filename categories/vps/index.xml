<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VPS on 记录点滴 - 分享</title><link>https://www.iminling.com/categories/vps/</link><description>Recent content in VPS on 记录点滴 - 分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>iminling.com</copyright><lastBuildDate>Sun, 09 Apr 2023 06:23:58 +0000</lastBuildDate><atom:link href="https://www.iminling.com/categories/vps/index.xml" rel="self" type="application/rss+xml"/><item><title>openwrt系统frps配置使用</title><link>https://www.iminling.com/2023/openwrt-frps-configuration/</link><pubDate>Sun, 09 Apr 2023 06:23:58 +0000</pubDate><guid>https://www.iminling.com/2023/openwrt-frps-configuration/</guid><description>&lt;p>宽带给了公网ip，所以想在自己家搭建一个frp的服务端，这样子就可以当做一台服务器，来进行内网穿透使用了。&lt;/p>
&lt;h2 id="frps配置">frps配置
&lt;/h2>&lt;p>我家里是使用的r2s刷的openwrt系统，所以可以在r2s中进行frps的搭建，找到对应的菜单：&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/1681048330252.jpg"
loading="lazy"
>&lt;/p>
&lt;p>端口绑定默认7000，直接使用就可以了，我们这里主要是使用http和https服务，所以填写对应的http和https绑定端口就可以了，可以和端口绑定设置成同一个端口。&lt;/p>
&lt;h2 id="子域名设置">子域名设置
&lt;/h2>&lt;p>在高级选项中我们可以设置一个子域名，这样子我们就可以使用改域名的子域名来进行访问不同的内网穿透服务。对应的子域名下也有一行提示：&lt;/p>
&lt;blockquote>
&lt;p>如果subdomain_host不为空，可以在frpc配置文件中设置类型为http(s)的subdomain；subdomain为test，路由将使用test.frps.com&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/489b5400b50f60b56447af44a18341ec.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="管理面板设置">管理面板设置
&lt;/h2>&lt;p>我们可以在管理面板查看到当前已经连接的客户端，以及每个客户端的流量使用情况，所以还是有必要进行一下设置。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/a3b4a82854f5665e9121f057d71f80b9.png"
loading="lazy"
>&lt;/p>
&lt;p>面板绑定端口7500，那么我们就可以使用openwrt的管理ip:7500来登录到frps的管理界面。&lt;/p>
&lt;h2 id="端口转发配置">端口转发配置
&lt;/h2>&lt;h3 id="管理界面端口配置">管理界面端口配置
&lt;/h3>&lt;p>我们在家里的时候可以使用内网ip:7500来访问，但是不在家的时候就没办法了。不慌，因为我有公网ip，那么我就可以通过端口转发，使用的域名+特定端口来访问到内网的7500端口。通过网络防火墙进行端口转发配置。&lt;/p>
&lt;p>配置管理界面的端口转发，通过&lt;code>域名:7500&lt;/code>访问到内网openwrt系统的7500端口。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/81b1d5e9cd4cfd2ad84557fa31f8a401.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="绑定端口配置">绑定端口配置
&lt;/h3>&lt;p>我们的frps绑定的端口是7000，所以需要把7000端口也暴露出去客户端才能正常连接注册上来，同样需要在端口转发中进行配置。&lt;/p>
&lt;p>通过&lt;code>域名:7000&lt;/code>访问到内网openwrt系统的7000端口。&lt;/p>
&lt;blockquote>
&lt;p>参考上边的管理界面的端口转发配置。&lt;/p>&lt;/blockquote>
&lt;p>到这里我们的frps服务端就搭建好了，接下来我们来配置客户端进行连接。&lt;/p>
&lt;h2 id="客户端连接">客户端连接
&lt;/h2>&lt;p>我们主要先在需要内网穿透的机器上安装frp的客户端，我这里是一个路由器刷的openwrt系统，所以安装frpc就可以了：&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/9c8e8a6e6d4ea5bfcf8d82a288aba913.png"
loading="lazy"
>&lt;/p>
&lt;p>服务器：其实就是我们frps服务端的ip，因为我使用的是宽带的动态ip，所以ip是会变的，我不能直接使用ip，但是我在家里的openwrt中配置了DDNS，那么我就可以使用ddns的域名来作为服务器，填入ddns中的域名。&lt;/p>
&lt;p>端口：7000，和frps的绑定端口一致。&lt;/p>
&lt;p>令牌：和frps中的令牌一致。&lt;/p>
&lt;p>http和https穿透服务端口：7000，和服务端一致。&lt;/p>
&lt;p>经过上边的配置我们就可以和服务端连上了，但是我们还没办法通过公网来访问我们其他需要穿透的服务，我们还需要建一条规则。在下方frp setting页面的下方点击添加，新建一个服务：&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/36e2c4682ea0816f2a20b91d2c9af36d.png"
loading="lazy"
>&lt;/p>
&lt;p>开启状态：开启。&lt;/p>
&lt;p>frp协议类型：选择http就可以了。&lt;/p>
&lt;p>域名类型：我们在frps服务端配置的时候使用的是子域名形式，所以这里也需要填子域名。&lt;/p>
&lt;p>子域名：我们需要使用的访问域名。&lt;/p>
&lt;p>内网主机地址：我们需要访问的是openwrt的管理界面，所以选择openwrt的地址就可以了。&lt;/p>
&lt;p>内网主机端口：我们访问的是管理界面，默认80端口。&lt;/p>
&lt;p>服务备注名：自定义的一个名称。&lt;/p>
&lt;p>其他的默认就可以了。然后点击保存并应用。完成后如下图：&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/ca5ce0494c7c0868dd10460616318694.png"
loading="lazy"
>&lt;/p>
&lt;p>如上图我添加的子域名是gzax6,那么我还需要去添加一条解析才能使用gzax6.frps.com:7000来访问我的ax6这个路由器的管理界面。&lt;/p>
&lt;p>我们添加一条CNAME的记录，因为ip地址是一直在变化的，我们唯一不变的就是ddns使用的域名，我们解析一条CNAME记录到我们ddns使用的域名，这样子就可以正确的解析到我的openwrt里的frps服务端了。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>经过上述步骤，我们就可以使用域名:7000端口来在外网访问我们内网的路由器管理界面了。&lt;/p></description></item><item><title>openwrt配置Cloudflare DDNS</title><link>https://www.iminling.com/2023/openwrt-configuration-cf-ddns/</link><pubDate>Sat, 08 Apr 2023 18:12:20 +0000</pubDate><guid>https://www.iminling.com/2023/openwrt-configuration-cf-ddns/</guid><description>&lt;p>配置DDNS的前提条件是家里的宽带需要有公网ip。下面我们开始使用cloudflare来进行DDNS的配置。&lt;/p>
&lt;h2 id="添加ddns配置">添加ddns配置
&lt;/h2>&lt;p>选择openwrt里的动态DNS功能，然后在里边添加一个自己的配置，名称随便，如我添加的&lt;code>MYDDNS&lt;/code>`。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/1681004803830.jpg"
loading="lazy"
>&lt;/p>
&lt;p>添加后就跳转到了配置界面，首先我们要选择ddns的提供商，这里我们选择cloudflare:&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/71685ba48430ecd770cf4478d066f580.png"
loading="lazy"
>&lt;/p>
&lt;p>切换后如下图：&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/5bccfa93f359096fcbed66be11f03113.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="查询主机名">查询主机名
&lt;/h3>&lt;p>这个就是我们的域名，通过这个域名访问到我们的openwrt管理后台，配置一个自己的三级域名，比如购买的域名的&lt;code>openwrt.com&lt;/code>`。这里则填写&lt;code>admin.openwrt.com&lt;/code>`。&lt;/p>
&lt;h3 id="域名">域名
&lt;/h3>&lt;p>域名这个选项其实就上将查询主机名修改为&lt;code>admin@openwrt.com&lt;/code>。&lt;/p>
&lt;h3 id="用户名和密码">用户名和密码
&lt;/h3>&lt;p>用户名是cloudflare的登录邮箱，密码是cloudflare的global api key。如下图，点击后边的view就可以查看自己的key了。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/9b9dbdfdf83b87c8ecf7c552f7938b04.png"
loading="lazy"
>&lt;/p>
&lt;p>截止上边openwrt里的配置就已经完成了。点击保存并应用就可以了。&lt;/p>
&lt;h2 id="域名解析">域名解析
&lt;/h2>&lt;p>我们在上边使用到了&lt;code>admin.openwrt.com&lt;/code>。然后我们需要在cloudflare的后台去配置这个域名的解析。添加一条A记录，记录值为`admin`,然后我们就可以通过admin.自己的二级域名来访问我们软路由系统了。IPv4地址可以先随便填一个，等待ddns程序自动进行更新。&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/dbaf8d30654b248e86a3942fd7e0ad41.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="开放openwrt端口">开放openwrt端口
&lt;/h2>&lt;p>在openwrt后台系统中找到&lt;code>网络-防火墙-端口转发&lt;/code>`，进行端口转发配置&lt;/p>
&lt;p>具体配置说明：&lt;/p>
&lt;p>名称：随便填一个标识。&lt;/p>
&lt;p>传输协议：选则TCP+UDP。&lt;/p>
&lt;p>外部区域：选wan口&lt;/p>
&lt;p>外部端口：ddns中的域名+外部端口访问到你这个机器。端口一般在1024~65535中选择。&lt;/p>
&lt;p>内部区域：选lan口&lt;/p>
&lt;p>内部ip地址：选openwrt的管理后台ip,例如我这里是192.168.6.1。&lt;/p>
&lt;p>内部端口：openwrt的管理后台一般都是输入ip就可以访问，所以端口是80.&lt;/p>
&lt;p>&lt;img src="https://www.iminling.com/wp-content/uploads/2023/04/81b1d5e9cd4cfd2ad84557fa31f8a401.png"
loading="lazy"
>&lt;/p>
&lt;p>添加，然后保存并应用，就可以通过ddns里的配置的&lt;code>查询域名:外部端口&lt;/code>访问到管理后台，本文中的就是&lt;code>admin.openwrt.com:8080&lt;/code>。8080端口是我随便写的，根据自己情况选择一个可以使用的端口，1024~65535之间的都可以。&lt;/p></description></item><item><title>哪吒面板迁移</title><link>https://www.iminling.com/2023/nezha-pannel-migrate/</link><pubDate>Tue, 28 Mar 2023 06:48:18 +0000</pubDate><guid>https://www.iminling.com/2023/nezha-pannel-migrate/</guid><description>&lt;p>安装哪吒面板的机器是RN的一台小鸡，本来安装的是ubuntu系统，想换成debian系统，所以需要对哪吒面板的数据进行迁移，所以写此篇文章记录迁移过程。&lt;/p>
&lt;h2 id="迁移准备">迁移准备
&lt;/h2>&lt;p>参考哪吒面板官方的wiki，所有的数据都存放在&lt;code>/opt/nezha&lt;/code>目录下，所以需要备份一下此目录，下载到本地。&lt;/p>
&lt;blockquote>
&lt;h4 id="如何进行数据迁移、备份恢复？" tabindex="-1">
如何进行数据迁移、备份恢复？&lt;a class="header-anchor" href="https://nezha.wiki/guide/q5.html#%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E3%80%81%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D%EF%BC%9F" aria-hidden="true">#&lt;/a>
&lt;/h4>
&lt;ol>
&lt;li>先运行一键脚本，选择&lt;code>停止面板&lt;/code>&lt;/li>
&lt;li>在旧服务器中打包&lt;code>/opt/nezha&lt;/code>文件夹，复制到新环境相同位置解压&lt;/li>
&lt;li>在新环境中运行一键脚本，选择&lt;code>启动面板&lt;/code>&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;h2 id="迁移">迁移
&lt;/h2>&lt;p>将备份数据上传到新的服务器，解压到&lt;code>/opt/nezha&lt;/code>目录下。通过&lt;code>nezha.sh&lt;/code>启动面板。&lt;/p>
&lt;p>配置通过域名访问面板：&lt;/p>
&lt;p>nginx配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 80;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name dashboard.baidu.com,tz.baidu.me;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # ws配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location /ws {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_pass http://dashboard-dashboard-1:80;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_http_version 1.1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Upgrade $http_upgrade;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Connection &amp;#34;Upgrade&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Host $host;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 访问配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location / {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_pass http://dashboard-dashboard-1:80;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>整个迁移过程还是比较简单的，通过备份数据，整体迁移启动。记录一下。&lt;/p></description></item></channel></rss>