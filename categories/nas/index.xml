<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nas on 记录点滴 - 分享</title><link>https://konghanghang.github.io/iminling-pages/categories/nas/</link><description>Recent content in Nas on 记录点滴 - 分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>iminling.com</copyright><lastBuildDate>Sun, 09 Feb 2025 03:15:47 +0000</lastBuildDate><atom:link href="https://konghanghang.github.io/iminling-pages/categories/nas/index.xml" rel="self" type="application/rss+xml"/><item><title>Proxmox VE(PVE)8.0安装飞牛私有云fnOS – NAS</title><link>https://konghanghang.github.io/iminling-pages/2025/install-fnos-nas/</link><pubDate>Sun, 09 Feb 2025 03:15:47 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2025/install-fnos-nas/</guid><description>&lt;img src="https://images.iminling.com/i/2025/01/08/d3c94bd7539929c05abffe55a8295ea2.webp" alt="Featured image of post Proxmox VE(PVE)8.0安装飞牛私有云fnOS – NAS" />&lt;p>&lt;a class="link" href="https://www.fnnas.com" target="_blank" rel="noopener"
>飞牛nas&lt;/a>系统出来也有段时间了，一个很不错的nas系统，在以前的文章中也介绍过&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/pve-install-nas/" >群晖nas系统的安装&lt;/a>，今天就来一次尝鲜，安装一下fnOS，看一下群晖的系统和飞牛的系统有什么区别。接下来就开始安装折腾之路 - 飞牛私有云fnOS nas安装。&lt;/p>
&lt;h2 id="pve配置">PVE配置
&lt;/h2>&lt;p>首先要先去&lt;a class="link" href="https://www.fnnas.com/download" target="_blank" rel="noopener"
>飞牛官网&lt;/a>把官方镜像ISO文件给下载下来，上传到pve中，这个还有不清楚的可以参考&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/pve-install-ikuai/" >Proxmox VE(PVE)8.0安装爱快ikuai虚拟机并直通网卡&lt;/a>中对爱快ISO文件上传的步骤。&lt;/p>
&lt;h3 id="常规">常规
&lt;/h3>&lt;p>修改为自己想要的vmid 以及 名称，我这里名称填了103，可以修改自己喜欢的，比如&lt;code>飞牛NAS&lt;/code>等。其他默认。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/08/37837647596f9bb193eb5478ce1cde0f.webp"
loading="lazy"
alt="fnos common"
>][5]&lt;/p>
&lt;h3 id="操作系统">操作系统
&lt;/h3>&lt;p>操作系统选择在飞牛官网下载的iso文件。其他的默认&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/08/e4de0f82014a774996efa5f6568c0acf.webp"
loading="lazy"
alt="fnos os"
>][6]&lt;/p>
&lt;h3 id="系统">系统
&lt;/h3>&lt;p>机型这里选择q35，其他不变。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/08/ffa5be3d705f4d6fae78b707bf0cc037.webp"
loading="lazy"
alt="fnos system"
>][7]&lt;/p>
&lt;h3 id="磁盘">磁盘
&lt;/h3>&lt;p>这里没有截图到，实际是和安装群群一样，把磁盘删除了，什么都不留。如果只是想体验则可以根据实际情况来分配硬盘大小。&lt;/p>
&lt;p>我这里是要把一个硬盘直通给飞牛的，所以我这里就把硬盘都给删除了 。&lt;/p>
&lt;p>如果只是用来体验，则可以给一个30G的磁盘。&lt;/p>
&lt;h3 id="cpu">cpu
&lt;/h3>&lt;p>cpu核心根据自己的情况来，我的J4125只有4个核心，所以全给了。类别选host。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/08/e0272ce01b4a02382119f02e9df93e3e.webp"
loading="lazy"
alt="fnos cpu"
>][8]&lt;/p>
&lt;h3 id="内存配置">内存配置
&lt;/h3>&lt;p>内存根据自己的需求来给，建议2G以上，我这里给4G.&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/08/c2ec1daba8630f17c9a006afa1a9d040.webp"
loading="lazy"
alt="fnos ram"
>][9]&lt;/p>
&lt;h3 id="网络">网络
&lt;/h3>&lt;p>网络我这里直接默认，使用pve的网桥&lt;code>vmbr0&lt;/code>就可以了。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/08/42a35339b69c2328ebeff937053706d2.webp"
loading="lazy"
alt="fnos network"
>][10]&lt;/p>
&lt;h3 id="确认">确认
&lt;/h3>&lt;p>都设置完成后对已设置的信息进行确认，基本不会有什么问题，完成。&lt;/p>
&lt;p>[&lt;img src="https://images.iminling.com/i/2025/01/08/c2f60e6ebc7d2de5314c6312dd7b1f52.webp"
loading="lazy"
alt="fnos confirm"
>][11]&lt;/p>
&lt;h3 id="硬盘直通">硬盘直通
&lt;/h3>&lt;p>经过上边设置后，需要再给nas系统一个磁盘，可以参考我在&lt;a class="link" href="https://www.iminling.com/2024/pve-install-nas" title="Proxmox VE(PVE)8.0安装黑群晖NAS并直通硬盘"
target="_blank" rel="noopener"
>Proxmox VE(PVE)8.0安装黑群晖NAS并直通硬盘&lt;/a>时的直通操作，基本是一样的。&lt;/p>
&lt;p>硬盘直通后，要看一下启动顺序，需要先从我们上传的iso镜像启动，如果没有问题就可以启动了。&lt;/p>
&lt;h2 id="fnos安装">FnOS安装
&lt;/h2>&lt;p>经过上边的步骤，已经创建好了一个虚拟机。接下来就是对系统进行配置启动了。点击控制台查看启动。默认图形安装。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/366271dd2ffa0ef1821b8e3b86440a6c.webp"
loading="lazy"
alt="fnos boot"
>&lt;/p>
&lt;p>选择安装位置，本文这里是选择直通的硬盘：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/e5ee329267cbe5bd4aae8fe6a258267a.webp"
loading="lazy"
alt="fnos disk select"
>&lt;/p>
&lt;p>下一步选择系统分区大小,官方默认给的是64G，这里直接按官方建议来：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/226fe70c13e5ab86147589ed6746b766.webp"
loading="lazy"
alt="fnos system disk"
>&lt;/p>
&lt;p>接下来就是安装了，等待安装成功就可以了。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/cf81cf188faa745ddfe2c241b150d05e.webp"
loading="lazy"
alt="fnos setup complete"
>&lt;/p>
&lt;p>下一步就会出现重启了，重启后控制台会显示一下内容：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/a09fdf42f173d00e8a376c07e7bb4305.webp"
loading="lazy"
alt="fnos login"
>&lt;/p>
&lt;p>会告诉登录的ip和端口，这里是&lt;code>http://192.168.1.47:5666&lt;/code>,等下来浏览器直接输入这个地址来进行访问。&lt;/p>
&lt;h2 id="初始化fnos">初始化FnOS
&lt;/h2>&lt;h3 id="系统设置">系统设置
&lt;/h3>&lt;p>接下来对fnos进行初始化，访问上边的地址：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/d3c94bd7539929c05abffe55a8295ea2.webp"
loading="lazy"
alt="fnos setup"
>&lt;/p>
&lt;p>初次进入后需要设置设备名称以及管理员信息。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/e6061080b1049a0751792f173238d904.webp"
loading="lazy"
alt="fnos setting"
>&lt;/p>
&lt;h3 id="存储空间创建">存储空间创建
&lt;/h3>&lt;p>设置后会进入系统，因为是第一次进入系统，系统会提示创建存储空间：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/b312decdfb16d2338ac395e0f5485d23.webp"
loading="lazy"
alt="fnos disk"
>&lt;/p>
&lt;p>点击立即创建，选择磁盘以及数据保护默认，我这里直接使用默认basic方式。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/63391e0b3418e5fbf3be4f6819c88b68.webp"
loading="lazy"
alt="fnos disk select "
>&lt;/p>
&lt;p>下一步设置存储空间可以使用的用户以及可以使用的大小，我这里只有自己使用，容量不限制：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/e10b83abed66f0285f19eb6dfb5f1a25.webp"
loading="lazy"
alt="fnos create disk"
>&lt;/p>
&lt;p>下一步创建确认：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/b02e6bce0be8396b9d261a020abc8d5d.webp"
loading="lazy"
alt="fnos create confirm"
>&lt;/p>
&lt;p>对磁盘进行格式化：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/d75627947bc95dadc91e27fe57914980.webp"
loading="lazy"
alt="fnos format disk"
>&lt;/p>
&lt;p>格式化完就创建成功了：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/4488f9a7b2b8f817f1f48ef411064ae2.webp"
loading="lazy"
alt="fnos disk created"
>&lt;/p>
&lt;p>查看创建的存储空间：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/i/2025/01/08/cd7395e330ccc57ac0fe7fc80a122fe6.webp"
loading="lazy"
alt="fnos disk"
>&lt;/p>
&lt;h3 id="fnos文件系统">FnOS文件系统
&lt;/h3>&lt;p>上边就已经完全安装好了飞牛NSA，飞牛的磁盘存储位置和群晖还是有一点不一样的，我们可以通过ssh登录进系统进行查看他的磁盘信息。&lt;/p>
&lt;p>ssh登录信息为访问网页版的用户名和密码。使用访问网页的ip和22端口+用户名和密码来进行登录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">aa@FnOS:/$ df -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">udev 1.9G &lt;span class="m">0&lt;/span> 1.9G 0% /dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 394M 7.7M 386M 2% /run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda2 63G 9.1G 51G 16% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 2.0G 1.4M 2.0G 1% /dev/shm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 5.0M &lt;span class="m">0&lt;/span> 5.0M 0% /run/lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">trimafs 1.8T 1.7T 58G 97% /fs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/mapper/trim_f9cc7969_89e3_4c0b_9857_bcec3a1144d7-0 1.8T 1.7T 58G 97% /vol1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 394M &lt;span class="m">0&lt;/span> 394M 0% /run/user/1000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到飞牛的系统是放在&lt;code>/&lt;/code>目录下的，63G, 而我直通的硬盘有两个目录&lt;code>/fs&lt;/code>和&lt;code>/vol1&lt;/code>。&lt;/p>
&lt;div data-page-id="SPIRdFXeFoo8mBxUJMgu3LHGsIe" data-lark-html-role="root" data-docx-has-block-data="false">
&lt;div class="ace-line ace-line old-record-id-YajHdl9ZxoJsJIxpfL0uECmrsrb">
在我的文件自己创建的目录在/fs目录下：
&lt;/div>
```bash
aa@FnOS:/fs/1000/ftp$ ls
docker download
```
&lt;p>
直接使用应用商店安装的qb下载目录可以在qb的设置里看到，实际是在&lt;code>/vol1&lt;/code>下。&lt;/div>
aa@FnOS:/var/apps/qBittorrent/shares$ ls -alh
total 8.0K
drwxr-xr-x 2 root root 4.0K Jan 7 23:05 .
drwxr-xr-x 6 root root 4.0K Jan 7 23:05 ..
lrwxrwxrwx 1 root root 27 Jan 7 23:05 qBittorrent -> /vol1/@appshare/qBittorrent
其他的目录信息大家根据情况再去研究。
&lt;h3 id="qb下载">qb下载
&lt;/h3>&lt;p>默认qb只能访问安装后设置里配置的目录，如果想要改变qb下载的目录，则需要去&lt;code>系统设置-应用&lt;/code>找到qb，添加一下允许它访问的文件目录。&lt;/p>
&lt;p>
下边是完整后的桌面预览图
&lt;/p>
![fnos complete](https://images.iminling.com/i/2025/01/08/3b89be1091025e546acd4224064abb0a.webp)</description></item><item><title>私人影院之emby安装配置以及通过embyExternalUrl实现302播放</title><link>https://konghanghang.github.io/iminling-pages/2025/emby-install-and-configuration/</link><pubDate>Sat, 04 Jan 2025 09:48:58 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2025/emby-install-and-configuration/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=QStIZ0I0Y3k4RmJmL1lZY3lLbjZDS0hqVkcxQjRVU21iZnlwaTJqRk83cm9VTE1EZzg2bmp6b2ErcmM4RkpsVUJDa3h4TEk9" alt="Featured image of post 私人影院之emby安装配置以及通过embyExternalUrl实现302播放" />&lt;p>前两篇文章先讲了如何&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/build-alist-server/" >安装alist并添加常见网盘&lt;/a>，以及如何&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/install-rclone-and-configuration/" >把alist通过rclone挂载在本地硬盘&lt;/a>实现像本地文件一样进行浏览，本篇文章咱们继续，介绍如何安装emby并对媒体进行添加进emby.&lt;/p>
&lt;h2 id="emby安装">emby安装
&lt;/h2>&lt;p>要安装&lt;code>emby&lt;/code>首先要面临的就是&lt;code>emby&lt;/code>版本选择问题，&lt;code>emby&lt;/code>本身是一个收费软件，但是也有大佬们的破解版本，我这里选择&lt;code>amilys/embyserver&lt;/code> 这个版本，可以去&lt;a class="link" href="https://hub.docker.com/r/amilys/embyserver" target="_blank" rel="noopener"
>docker hub官方地址&lt;/a>查看。确认镜像后，下边给出我的&lt;code>docker-compose.yaml&lt;/code>配置文件:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mynet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">emby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">amilys/embyserver&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">emby&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./config:/config&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/data/movies:/data/movies:rslave&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">8096&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">8096&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extra_hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">host.docker.internal:host-gateway&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mynet&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>network不再多说了，自己创建的一个桥接网络。&lt;/p>
&lt;p>端口暴露&lt;code>8096&lt;/code>出去，&lt;/p>
&lt;p>&lt;code>emby&lt;/code>的配置文件在&lt;code>/config&lt;/code>目录，把它挂载到本地方便后续进行修改。&lt;/p>
&lt;p>另外一个挂载路径就是本地的&lt;code>/data/movies&lt;/code>挂载到容器的&lt;code>/data/movies&lt;/code>目录。本地的&lt;code>/data/movies&lt;/code>其实就是&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/install-rclone-and-configuration/" >上篇文章通过rclone处理的alist中所有的文件&lt;/a>。这里建议设置为一样的路径，方便后续在302播放的时候替换，不会遇到那么多麻烦。&lt;/p>
&lt;p>整体目录如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@docker:~/emby# tree -L &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就是启动容器&lt;code>docker compose up -d&lt;/code>进行&lt;code>emby&lt;/code>的配置了。&lt;/p>
&lt;h2 id="emby初始化">emby初始化
&lt;/h2>&lt;p>启动容器后，可以通过&lt;code>ip:8096&lt;/code>来访问刚启动的容器。下边来进行&lt;code>emby&lt;/code>的一些初始化配置，首先是进行语言配置，选择&lt;code>chinese simplified&lt;/code>(简体中文)，下一步&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=bjNUT2U1c1QvOHpVWDc5ZEJMQ3JiZ2U1VkxReVdyQ3BMazhUMndTV3ZqTVo2a1BXRlMwQ2s0M2JseGVRaUg2Ym1zZ0ZCd2M9"
loading="lazy"
alt="welcome to emby"
>&lt;/p>
&lt;p>设置完语言后就会提示创建用户,根据自己的需求创建用户以及设置用户名和密码。然后继续下一步&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=ZUs0RHZNQVJ3SEE2RDlYcFZ3eTZ4ZHBoMzhzUVNPTWJPQnA5VG81MjRPbmxKbWU3YVlvU1JDRjhMREg0MmJjTnMra2dTa289"
loading="lazy"
alt="emby create first user"
>&lt;/p>
&lt;p>之后就会让添加一个媒体库，这里可以先不添加，直接下一步，等完全配置好了之后再去配置媒体库相关的东西&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=NjF0QnBxRmdkbUZmdlBtcG9tekZiRUJxTWZaMVVQS2YzbEJWa3Z6L0FyY1lzY1BoQ3Nlek42Y3NrdXFuZFVtSFpuZUk1WWs9"
loading="lazy"
alt="emby setup media libraries"
>&lt;/p>
&lt;p>接下来是设置媒体库的偏好语言和地区，根据自己需求英文或者中文&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=S0E0b2ZQVnJLWWFPL0lQRmZxd05LUXE1S3VSUWRTajRCczdJLzl6YWZXWnVycDNwV0FIK3hkOGd6V050Z3M1VkJoYVdVYWs9"
loading="lazy"
alt="emby preferred metadata language"
>&lt;/p>
&lt;p>下边是配置远程访问，开启就好了&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=QUVpM0YwUDcxRG5IZGlISXhyU0pJZUFVNS9iaGJVZ2hXZWluQXRxcjBvWjUxdHRadjNDbHovWWRqSHhxMUtuRHl3UitoNzg9"
loading="lazy"
alt="emby configure remote access"
>&lt;/p>
&lt;p>下边是使用条例，接收继续下一步&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=QlNvbkV2U2kyTnhrcnFzZk5xZnNRUUw1TENlMUt4dlFNTVQ3bExQVXZUelYzUWJqVElSWDVNZGtsemE0ZTVMbW42V01mTFE9"
loading="lazy"
alt="emby terms of use"
>&lt;/p>
&lt;p>终于完成了,点击finish跳转。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=aWtSeWdQRnQxazhMN0RNdGFCdytHbDFVaW1zOW9yV1dzZkNDYnYzMTBMbDFsbGREWVJqNXF2NUNHNjh4N202UEhORFV3MFU9"
loading="lazy"
alt="emby set done"
>&lt;/p>
&lt;p>经过上边设置，emby就算是初始化好了，接下来就可以进行媒体库添加了。&lt;/p>
&lt;h2 id="媒体库">媒体库
&lt;/h2>&lt;p>进入到emby后台，找到媒体库菜单，就可以在这里进行添加媒体库了。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=ZjdRV3Z6RCtTOFJuZy8yb01pNE1sWDF2Q3BySXAyNDl4cUxxQlFzbGt0YkNtT2dvMXR1R3JBeVdjNnNIZWlOWXZMNU9NU0k9"
loading="lazy"
alt="emby 媒体库"
>&lt;/p>
&lt;p>添加媒体库时需要整理好分类,是电影、电视节目还是其他，方便emby正确刮削。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=ajVxcTA0S1NrWVl3S1Y3UTQrNWJ4R0Rkd051YXFQckxRd1FDRC9KU21FVDBMS2EyQitOU1ZVVXhSZG1iUmpUZTh1YWdNaHc9"
loading="lazy"
alt="emby add lib"
>&lt;/p>
&lt;p>根据情况配置上边的选项，配置好后emby就会开始进行刮削，完整后就可以在emby首页看到添加的目录下的所有电影了。&lt;/p>
&lt;p>截止到现在emby已经可以正确的播放视频了，但是此时播放网盘的内容是会经过搭建alist那台机器，等于是那台机器把媒体内容下载下来，然后送给我们的播放器进行播放，如果alist部署在本地播放倒是什么没什么，反正都要下载下来。如果alist部署在其他vps上，流量消耗是一个比较大的问题。如果是部署在家里但是需要在家庭以外的地方播放，这时候流量也会经过家里然后才到你在外边的设备，播放速度就取决于你的家庭宽带的上行了，一般上行所以都不会太大，所以我们需要配置302重定向，让播放设备直接和网盘进行交互，而alist服务器只是负责给你列出目录树，供我们浏览使用。下边就来讲一下如何进行302播放。&lt;/p>
&lt;h2 id="embyexternalurl实现302播放">embyExternalUrl实现302播放
&lt;/h2>&lt;p>本文主要介绍使用&lt;a class="link" href="https://github.com/bpking1/embyExternalUrl" target="_blank" rel="noopener"
>embyExternalUrl&lt;/a>工具进行302播放。有大佬做了整合，弄了一个docker镜像：&lt;a class="link" href="https://github.com/thsrite/MediaLinker" target="_blank" rel="noopener"
>MediaLinker&lt;/a>，降低了操作的复杂度，并且支持ssl证书，可以根据需求进行配置。docker compose文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">services:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> medialinker:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> container_name: medialinker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> image: thsrite/medialinker:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> volumes:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - ./data/:/opt/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> environment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - &lt;span class="nv">AUTO_UPDATE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - &lt;span class="nv">SERVER&lt;/span>&lt;span class="o">=&lt;/span>emby
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - &lt;span class="nv">NGINX_PORT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">8091&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> network_mode: host
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>具体环境信息可以看大佬的介绍，我这里使用emby且也不需要SSL，如上是最简单的配置了。启动后，在data目录下会有一个constant.js文件，我们需要改变其中emby、alist的一些配置，需要配置的地方如下图：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=VTJuMzZadnFMdGQzWkp6ZFlHWk44aEVrb2trOHlIU0xzQlRjK3RTTi9TVFVGN21lSVJ6dzRpa2h6YUNtTEd2RHhrbXpqaFU9"
loading="lazy"
alt="embyExternalUrl setting"
>&lt;/p>
&lt;p>根据上图可以看到有7项信息需要填写，主要分为两个大项，一个是emby的配置，一个是alist的配置。下边来详细说一下每个参数的配置。&lt;/p>
&lt;h3 id="emby配置">emby配置
&lt;/h3>&lt;p>emby需要三个参数，embyhost这个简单，就是我们打开emby的地址，安装的机器ip和docker-compose文件中的端口就可以了。&lt;/p>
&lt;p>embyApiKey需要在emby的后台去获取，路径如下，新建一个api密钥，然后填进去就可以了。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=aWRtQlVGcExkd3dWR1RvTWdBN3VvaGFpSmc3ZnE0b3ZaS21CcXhzdU5naHdqNGlwL1hnU2lqMFd3ZHo1bk15ZlpKSyt1OHc9"
loading="lazy"
alt="emby api key"
>&lt;/p>
&lt;p>mediaMountPath文件中介绍的也比较清楚：&lt;/p>
&lt;blockquote>
&lt;p>// 挂载工具 rclone/CD2 多出来的挂载目录, 例如将 od,gd 挂载到 /mnt 目录下: /mnt/onedrive /mnt/gd ,那么这里就填写 /mnt
// 通常配置一个远程挂载根路径就够了,默认非此路径开头文件将转给原始 emby 处理
// 如果没有挂载,全部使用 strm 文件,此项填[&amp;quot;&amp;quot;],必须要是数组&lt;/p>&lt;/blockquote>
&lt;p>我们在上边安装alis和emby的时候，两个内部路径都是&lt;code>/data/movies&lt;/code>，那么这个数组中就填&lt;code>/data/movies&lt;/code>.&lt;/p>
&lt;p>emby的配置就完成了。&lt;/p>
&lt;h3 id="alist配置">alist配置
&lt;/h3>&lt;p>host也比较简单，我们怎么访问alist的就怎么写，一般是ip:5244.&lt;/p>
&lt;p>alist-token的获取路径如下：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=VnhkSm81T0cxajAydnFhZnRrbFRFcXFzVVhPeEhqSW1DcDJEVHFiVUtpNkhjaDE1VDExb0dMUTZZZnhVTlRaUDF6RHFsR3M9"
loading="lazy"
alt="alist api key"
>&lt;/p>
&lt;p>然后是否启用了sign，这个在往alist配置每个网盘的时候，我这边都是有开启的，所以这个参数我需要设置为true.&lt;/p>
&lt;p>签名有效期，按照他提供的路径也很容易找到，默认是0，我这里也把他改成12，两边同步。&lt;/p>
&lt;p>然后保存&lt;code>constant.js&lt;/code>文件，此时需要再对&lt;code>medialinker&lt;/code>容器进行一次重启，如果不重启，mediaMountPath不生效。&lt;/p>
&lt;p>如何判断是否成功了呢？可以查看medialinker的日志，&lt;code>docker compose logs -tf&lt;/code> 来查看。如下我在第一次没有重启的情况去播放视频，看到有以下日志，找的还是默认的/mnt路径，并且可以看到我的服务器流量在疯狂的跑下行流量，说明是通过服务器下载后转给我的。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=NTVJOUE4WnZBV1A4WlFRbVY2dnVocElWRXQzamJIS2VCVDlnTHB0alNrZmQ1aUJTb2NTTGZvTlBNZUtWSnBzNmRGYm40ekk9"
loading="lazy"
alt="emby 302 error"
>&lt;/p>
&lt;p>经过对容器进行重启后，再次去播放视频，可以看到以下日志，读取到了我配置的/data/movies.&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=OEhWalpia1RGai94MjdiZWlNSURKMFhDVXNDNTA3SU9RODFNR0NydC8rdVM2Vk5oc3h0QlplTDFVejZUVFpXdUJBY0E1TEk9"
loading="lazy"
alt="emby 302 success"
>&lt;/p>
&lt;p>经过以上就可以愉快的302直接播放云盘中的视频了。希望可以帮到大家。&lt;/p></description></item><item><title>私人影院之rclone安装以及通过WebDav配置alist</title><link>https://konghanghang.github.io/iminling-pages/2024/install-rclone-and-configuration/</link><pubDate>Sun, 13 Oct 2024 02:04:10 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2024/install-rclone-and-configuration/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=bEt3WUtUZk13dFI3Z0FyckVUZGdnQS94cHhoaHlzMVdsNGp1c0tHVG0vVjhLRHZYbzE2Unl1VlVPdWpFUjdqMllSZE5jVGc9" alt="Featured image of post 私人影院之rclone安装以及通过WebDav配置alist" />&lt;p>上一篇文章介绍了对&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/build-alist-server/" >alist的安装&lt;/a>，本篇文章则来介绍一下rclone把alist里挂载的网盘再套娃挂载到本地磁盘，为后续emby直接读取本地的挂载文件做准备。那么接下来就开始折腾rclone.&lt;/p>
&lt;h2 id="配置文件">配置文件
&lt;/h2>&lt;p>本文使用docker compose来进行安装，可以&lt;a class="link" href="https://hub.docker.com/r/rclone/rclone" target="_blank" rel="noopener"
>docker-hub&lt;/a>找到rclone的官方镜像地址，安装可以参考rclone的官方&lt;a class="link" href="https://rclone.org/install/#docker" target="_blank" rel="noopener"
>安装教程&lt;/a>。&lt;/p>
&lt;p>先要把rclone的配置文件给配置好，我这里只配置alist，所以直接给出配置文件内容方便大家快速使用:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[alist]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type = webdav
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">url = http://alist:5244/dav
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vendor = other
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">user = admin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pass = x9WN7skj6o7_fqjd4F
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如上配置，&lt;/p>
&lt;p>[]中的名称自己定义一个，&lt;/p>
&lt;p>type固定为webdav，&lt;/p>
&lt;p>url为alist的webdav的url，url地址在&lt;a class="link" href="https://alist.nn.ci/zh/guide/webdav.html" target="_blank" rel="noopener"
>alist的文档&lt;/a>中也有说明，就是自己alist的ip+端口然后拼上/dav就可以了。&lt;/p>
&lt;p>vendor值为other&lt;/p>
&lt;p>user为自己的alist的用户名&lt;/p>
&lt;p>pass为自己的alist的用户名密码，但是密码需要进行加密才行，所以可以使用下边的命令来生成自己密码的密文，&lt;/p>
&lt;p>生成加密密码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run --rm -it \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rclone/rclone \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> obscure [替换为具体的密码]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行命令后就会生成一个你密码的密文，然后替换在配置文件中就可以了。&lt;/p>
&lt;p>经过上边处理配置文件就处理好了，可以命名为&lt;code>rclone.conf&lt;/code>，rclone的默认配置文件名就是这个，如果名字改动了，则需要在下边docker-compose配置文件的挂载时特殊配置。方便下边docker-compose文件使用。&lt;/p>
&lt;h2 id="docker-compose">docker compose
&lt;/h2>&lt;p>老规矩，所有的应用程序都使用docker compose安装，下边是docker-compose.yaml的完整配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mynet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rclone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rclone/rclone:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rclone&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cap_add&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">SYS_ADMIN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">devices&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/dev/fuse&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">security_opt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">apparmor:unconfined&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./config:/config/rclone&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/data/movies:/data:shared&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/tmp:/tmp&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;mount alist:/ /data --cache-dir /tmp --allow-other --vfs-cache-mode writes --allow-non-empty&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mynet&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>network网络配置我这里就不讲了，是我自己创建的一个桥接网络。&lt;/p>
&lt;p>这里主要说一下&lt;code>volumes&lt;/code>和&lt;code>command,&lt;/code> 其中&lt;code>cap_add&lt;/code>，&lt;code>devices&lt;/code>和&lt;code>security_opt&lt;/code>有兴趣的同学可以自己去研究他的含义，这里直接按照我给的配置文件就行了。&lt;/p>
&lt;p>volumes中&lt;code>/tmp&lt;/code>，临时文件存放在目录，在&lt;code>command&lt;/code>中指出了&lt;code>cache-dir&lt;/code>的位置，然后挂载到宿住机的/tmp.&lt;/p>
&lt;p>rclone的配置在容器的&lt;code>/config/rclone&lt;/code>目录下，我挂载到本地的config目录，把上边咱们生成的配置文件放在里边。&lt;/p>
&lt;p>&lt;code>/data/movies:/data&lt;/code>则是目录的配置，先是在&lt;code>command&lt;/code>中把咱们的远程alist中的/目录&lt;code>(alist:/)&lt;/code>和rclone容器中的&lt;code>/data&lt;/code>目录关联在一起，然后再通过volumes把容器中的&lt;code>/data&lt;/code>挂载在宿主机的&lt;code>/data/movies&lt;/code>下。通过这个目录挂载，咱们就可以在宿主机下&lt;code>/data/movies&lt;/code>中浏览alist中所有挂载的文件信息，为后边&lt;code>emby&lt;/code>添加影视库做准备。&lt;/p>
&lt;h2 id="容器启动">容器启动
&lt;/h2>&lt;p>上边的配置信息完成后，文件放到对应的目录下，我这边的目录结构如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@docker:~/rclone# tree
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── rclone.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后在rclone目录下执行&lt;code>docker compose up -d&lt;/code>启动容器就可以了。&lt;/p>
&lt;p>如果配置没问题应该就可以在宿主机&lt;code>/data/movies&lt;/code>目录下看到alist中的网盘和所有文件了。&lt;/p>
&lt;p>以上就是折腾rclone和alist的过程，把alist挂载到本地，想本地目录文件一样来进行浏览，方便后续emby进行影视库的添加。&lt;/p></description></item><item><title>私人影院之搭建自己的alist服务端并添加常见网盘</title><link>https://konghanghang.github.io/iminling-pages/2024/build-alist-server/</link><pubDate>Sat, 21 Sep 2024 09:56:03 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2024/build-alist-server/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=ZVpuQ3crbnpMRHc2N2lQQktsMm93TkVobGtsOXZrV2ZsUUYyajMxd1FuSlFXSW5iK0wxRUxPcEYvcEhDU0NkSnJJQzdnT289" alt="Featured image of post 私人影院之搭建自己的alist服务端并添加常见网盘" />&lt;p>前段时间写了一篇如何&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/how-to-build-xiaoya-alist-and-use/" >搭建小雅alist&lt;/a>的文章，使用小雅的媒体库来进行观影，但是这种有一个问题就是小雅的库更新的不是很快，而且如果我想在电视上观看比较麻烦，就算搭配emby,也无法避免资源更新慢的问题。所以就想着使用自己的网盘配合自己搭建的alist服务端，来进行资源快速入库，方便自己快速观看。那么接下来就详细说明一下自己的搭建过程。&lt;/p>
&lt;h2 id="alist服务端">alist服务端
&lt;/h2>&lt;p>我这里使用&lt;code>docker compose&lt;/code>来搭建&lt;code>alist server&lt;/code>,alist提供了两个版本的镜像，一个是普通的版本，一个是带aria2下载的版本，根据自己的需求进行安装，安装文档参考&lt;a class="link" href="https://alist.nn.ci/zh/guide/install/docker.html" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;p>我的docker-compose.yaml如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mynet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">xhofe/alist-aria2:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">alist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./data:/opt/alist/data&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mynet&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">15244&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">5244&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extra_hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">host.docker.internal:host-gateway&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">PUID=0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">PGID=0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">UMASK=022&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=Asia/Shanghai&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我的目录分配如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>整体配置是比较简单的，我使用了自己的网络&lt;code>mynet&lt;/code>，而不是让docker自建一个网络，方便后续容器之间的项目访问。&lt;/p>
&lt;p>按照上边配置好后直接&lt;code>docker compose up -d&lt;/code>运行起来容器。之后通过访问ip:15244(我这里映射到主机的15244端口了)，默认admin用户和密码，进行登录并修改密码。容器启动成功，alist的服务端搭建就算完成了。&lt;/p>
&lt;h2 id="网盘添加">网盘添加
&lt;/h2>&lt;p>我这里主要添加三种类型，天翼云盘，115网盘，本地smb，下边就看一下每种网盘是需要怎么来添加。&lt;/p>
&lt;h3 id="天翼云盘">天翼云盘
&lt;/h3>&lt;p>我家里使用的是电信的宽带，送了天翼网盘的会员，个人和家庭分别是4TB，整体也不算少。&lt;/p>
&lt;p>进入到alist的管理界面&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=VzFnSjkyMkZvU2JNMFZtT0pDeFhJTEFCM1NtK2ZwTGdmN2d5L251ZTVlMk80TzBFVWJqa1hhR2k2ZUR1V001amJPWVhhdXM9"
loading="lazy"
alt="alist disk"
>&lt;/p>
&lt;p>点击存储-添加,然后选择&lt;code>天翼云盘客户端&lt;/code>(官方建议的类型)。然后就可以看到很多选项需要填写，具体的填写操作步骤参考&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/189.html" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=Y2FYY1hHdHZaYjB0OFdmdklWNEF0TXA0b0d3YmFIc2lzcklvajY5ZWc1bDJqRmFSRHM1TEFxYVpyWXJLaFlQdVZxMWdEL2c9"
loading="lazy"
alt="alist add 189"
>&lt;/p>
&lt;p>挂载路径是最终显示在alist主页的名称，需要唯一。&lt;/p>
&lt;p>缓存过期时间根据自己的需求来定义，比如我添加了一个文件想要快一点能刷新出来，那么我就定义短一点(比如1分钟)，这个根据自己需求来定。&lt;/p>
&lt;p>WebDAV策略建议都使用302重定向，这样子在通过WebDAV访问alist服务端的内容的时候，实际上会重定向到网盘内真实的路径，等于直接访问网盘。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=RnZOZEdPMDR4UTNuVzNnOXdnQm5rNDB2N05KTnpDcXVKL0FUeEZLMzlkRTgzME03NUxTQkp5TjhGUjNrdlZpTDRaMDJVRFE9"
loading="lazy"
alt="alist add 189"
>&lt;/p>
&lt;p>启用签名选项如果后续是需要配合emby实现302播放，&lt;strong>一定要打开，一定要打开，一定要打开&lt;/strong>。&lt;/p>
&lt;p>用户名就是天翼云盘登录的手机号。&lt;/p>
&lt;p>密码是天翼云盘登录的密码。&lt;/p>
&lt;p>根文件的id根据自己需求，如果只是想把网盘内的某一个目录添加到alist中，那就按照&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/189.html" target="_blank" rel="noopener"
>官方文档&lt;/a>里的方法找到对应的文件夹id。&lt;/p>
&lt;p>类型有&lt;code>家庭云&lt;/code>和&lt;code>个人云&lt;/code>，&lt;code>family id&lt;/code>在是选择&lt;code>家庭云&lt;/code>的时候需要填写，官网里都有介绍。我这里就是&lt;code>家庭云&lt;/code>。&lt;/p>
&lt;p>基本上述搞定就可以添加成功了。&lt;/p>
&lt;h3 id="115网盘">115网盘
&lt;/h3>&lt;p>基本和天翼云盘添加流程差不多，驱动类型选择&lt;code>115网盘&lt;/code>,挂载路径、缓存过期时间、WebDAV策略、启用签名四个选项和天翼云盘意向逻辑，进行处理就行了。有不明白的可以参考&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/115.html" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=NFZFUVpyNmtTaUY3TnhFd2o1MURwaGRTcWpZZHB5TWFLS0RXbzVpSXBLK2cyRlo3aWxiTmRVYzluenJIcFZUejcwU0hNNTQ9"
loading="lazy"
alt="alist add 115"
>&lt;/p>
&lt;p>cookie和Qrcode二选一，&lt;a class="link" href="https://alist.nn.ci/zh/guide/drivers/115.html#_1-qrcode-%E6%89%AB%E7%A0%81%E6%96%B9%E5%BC%8F%E7%99%BB%E5%BD%95" target="_blank" rel="noopener"
>官方文档&lt;/a>也有详细的介绍，包括根文件夹ID，都有详细的介绍，参考文档就可以了。感觉Qrcode会简单一点。我是直接使用的抓包软件抓的应用的cookie。这里有一个事项需要注意一下，如果使用了手机端软件，后续在网页登录的时候最好选择用手机扫码登录，要不然可能会把手机应用端挤掉导致cookie失效。&lt;/p>
&lt;h3 id="smb添加">SMB添加
&lt;/h3>&lt;p>有些文件没有放在网盘，而是放在自己本地或者放在本地nas中，比如我上篇文档也介绍了&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/pve-install-nas/" >Proxmox VE(PVE)8.0安装黑群晖NAS并直通硬盘&lt;/a>，这样子想要在alist中把nas中的资源添加进去，就需要使用到SMB一些了，nas中是有开启这个功能的。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=d2U1N1FpRE1RSnBmcEhLUFRibUxKV1lmM3ZpSGxzek5xYXZKcjJuZVVlQk1QcDVlMHB5bVNidE9pUDNJbXF0N3FZOVlaMzg9"
loading="lazy"
alt="alist add smb nas"
>&lt;/p>
&lt;p>添加驱动类型选择&lt;code>SMB&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=MFVsanZ1SUh1bTgrYldBSjhGYThsdVlwelpSTHNSV3dKcm8zKy9kZ1FGOERCQktXRWNzRTIxYmpvZ2NSQ1crbWJVeHdkUzQ9"
loading="lazy"
alt="alist add smb nas"
>&lt;/p>
&lt;p>smb是本地文件，启用签名就可以不用开了。地址、用户名、密码和分享名称(smb中的目录)根据自己的需求填写就可以了。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>我这里介绍了三种网盘的添加方式，其他的网盘也都大同小异，比如添加阿里云盘等。那么搭建alist服务端并添加网盘，就介绍到这里。希望可以帮到大家。&lt;/p>
&lt;p>接下来还会介绍利用rclone挂载alist，然后让emby来使用并实现302播放。&lt;/p></description></item><item><title>docker搭建aliyunpan-sync时实增量同步阿里云盘文件</title><link>https://konghanghang.github.io/iminling-pages/2024/docker-deploy-aliyunpan-sync/</link><pubDate>Sat, 06 Jul 2024 03:11:29 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2024/docker-deploy-aliyunpan-sync/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=dTRuQi9oWFFCZ2JmUDF2bDRUUFVERFNJZnc2Sm43RTU4dXlnVzViM3pMYzdEenBDM0t4MDBwbkM2eTY5QlZ1MSt2UjhuRjQ9" alt="Featured image of post docker搭建aliyunpan-sync时实增量同步阿里云盘文件" />&lt;p>在前边的文章中介绍了如何快速的搭建&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2024/how-to-build-xiaoya-alist-and-use/" >小雅alist&lt;/a>来满足大家的观影需求，但是有一些剧小雅更新没那么及时，这时候就需要大家八仙过海了。如何及时找到自己要观看的剧，并成功观看呢？下边就带着大家一起使用&lt;a class="link" href="https://github.com/tickstep/aliyunpan" target="_blank" rel="noopener"
>aliyunpan-sync&lt;/a>工具来同步阿里云盘的数据。&lt;/p>
&lt;h2 id="网盘选择">网盘选择
&lt;/h2>&lt;p>这里为什么要选择阿里云盘呢？因为阿里网盘资源比较多，更新也比较快，然后网上也找了同步阿里云盘的同步工具：&lt;a class="link" href="https://github.com/tickstep/aliyunpan" target="_blank" rel="noopener"
>aliyunpan-sync&lt;/a>，理论上115，百度云，夸克这些网盘也都是ok的，主要是把文件同步到本地，具体的网盘的同步工具就需要大家自己去找了。我这里只带着大家实现阿里云盘的同步。另外推荐给大家一个电报的阿里云盘的资源通知群，资源更新还是挺及时的：&lt;a class="link" href="https://t.me/yunpanpan" title="阿里云盘telegram群组"
target="_blank" rel="noopener"
>https://t.me/yunpanpan&lt;/a>。&lt;/p>
&lt;h2 id="安装aliyunpan-sync">安装aliyunpan-sync
&lt;/h2>&lt;p>我这里使用的是docker compose进行的安装，如果还没有安装docker的同学可以参考的我的文章把docker 给安装一下：&lt;a class="link" href="https://konghanghang.github.io/iminling-pages/2023/linux-install-docker/" >docker安装&lt;/a>。&lt;/p>
&lt;h3 id="获取阿里云盘token">获取阿里云盘token
&lt;/h3>&lt;p>要想从阿里云盘里下载文件，肯定是需要先登录阿里云盘才能进行数据同步，如何登录阿里云盘aliyunpan-sync工具里也有具体的说明：&lt;a class="link" href="https://github.com/tickstep/aliyunpan/blob/main/docs/manual.md#%E7%99%BB%E5%BD%95%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E5%B8%90%E5%8F%B7" target="_blank" rel="noopener"
>登录阿里云盘&lt;/a>，需要先在&lt;a class="link" href="https://github.com/tickstep/aliyunpan/releases" target="_blank" rel="noopener"
>release&lt;/a>页面下载一个对应系统的release，我的操作系统是mac m1芯片我就下载arm那个&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=R0FVYnRhNEJZWmVoZTdMQTkyOFRxVUM3cmN3TUZPbjFZSWF4OVNablFBWUsxNGNpYW83dkJpZFduaWMrV1YzOXBhd0lmR2s9"
loading="lazy"
alt="aliyunpan sync release"
>&lt;/p>
&lt;p>然后对文件进行解压，使用终端进入到对应的目录里，看到有一个&lt;code>aliyunpan&lt;/code>的文件，执行这个文件获取登录链接，然后在网页端进行扫码登录就可以了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># k @ Mac-mini in ~/Downloads/aliyunpan-v0.3.2-darwin-macos-arm64 [10:03:26]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">README.md manual.md sync.sh webdav.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan plugin sync_drive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan_config.json sync.bat webdav.bat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># k @ Mac-mini in ~/Downloads/aliyunpan-v0.3.2-darwin-macos-arm64 [10:03:28]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ aliyunpan login
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zsh: &lt;span class="nb">command&lt;/span> not found: aliyunpan
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># k @ Mac-mini in ~/Downloads/aliyunpan-v0.3.2-darwin-macos-arm64 [10:03:42] C:127&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ./aliyunpan login
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请在浏览器打开以下链接进行登录，链接有效时间为5分钟。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">注意：你需要进行一次授权一次扫码的两次登录。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://openapi.alipan.com/oauth/authorize?client_id&lt;span class="o">=&lt;/span>cf9f70e8fc6143031375&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">redirect_uri&lt;/span>&lt;span class="o">=&lt;/span>https%3A%2F%2Fapi.tickstep.com%2Fauth%2Ftickstep%2Faliyunpan%2Ftoken%2Fopenapi%2F0bd327267c41f7b2fcadf927%2Fauth2&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">scope&lt;/span>&lt;span class="o">=&lt;/span>user:base,file:all:read,file:all:write
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请在浏览器里面完成扫码登录，然后再按Enter键继续...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开url就需要使用手机端的阿里云盘进行扫码登录，提示进行授权：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=UHVPZkRvYkllMlN2SzRMa09qTXcxRDR3aTBhZHVsNmdCaTlwbzlmMXhqcXhvS2lPSnFRS1lKbjB6TnM4VkpNcXQxSUVhV0k9"
loading="lazy"
alt="aliyunpan authority"
>&lt;/p>
&lt;p>根据需要选择授权范围，我这里把&lt;code>备份盘&lt;/code>和&lt;code>资源库&lt;/code>都进行授权，其实就是整个阿里云盘这个工具都可以访问。然后就是回到终端看到具体的token。保存好这个token.&lt;/p>
&lt;h3 id="docker镜像启动">docker镜像启动
&lt;/h3>&lt;p>我这里使用的是docker compose来进行安装的，我的文件目录如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ tree
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── docker-compose.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── download_handler.js.sample
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── sync_handler.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── sync_handler.js.sample
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── token_handler.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── token_handler.js.sample
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── upload_handler.js.sample
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── sync_drive
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>config目录是用来挂在配置文件的，等下token是要填在这个目录下的&lt;code>aliyunpan_config.json&lt;/code>文件里的。&lt;/p>
&lt;p>js目录是用来做一些脚本处理，用来控制什么文件可以上传，什么文件可以下载，以及进行一些通知操作的。&lt;/p>
&lt;p>sync_drive是保存数据库的信息，用来记录同步的一些信息，即使容器销毁，同步数据库还可以用于以后使用。&lt;/p>
&lt;p>具体的docker-compose.yaml文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sync&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tickstep/aliyunpan-sync:v0.3.2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">aliyunpan-sync&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># （必须）映射的本地目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/data/webdav/data:/home/app/data:rw&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># （可选）可以指定JS插件sync_handler.js用于过滤文件，详见插件说明&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#- ./config/sync_handler.js:/home/app/config/plugin/js/sync_handler.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./js:/home/app/config/plugin/js/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># （推荐）挂载sync_drive同步数据库到本地，这样即使容器销毁，同步数据库还可以用于以后使用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./sync_drive:/home/app/config/sync_drive&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># （必须）映射token凭据文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./config/aliyunpan_config.json:/home/app/config/aliyunpan_config.json&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extra_hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">host.docker.internal:host-gateway&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 时区，东8区&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=Asia/Shanghai&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 下载文件并发数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_DOWNLOAD_PARALLEL=2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 上传文件并发数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_UPLOAD_PARALLEL=2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 下载数据块大小，单位为KB，默认为10240KB，建议范围1024KB~10240KB&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_DOWNLOAD_BLOCK_SIZE=1024&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 上传数据块大小，单位为KB，默认为10240KB，建议范围1024KB~10240KB&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_UPLOAD_BLOCK_SIZE=10240&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定网盘文件夹作为备份目标目录，不要指定根目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_PAN_DIR=/来自分享&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 备份模式：upload(备份本地文件到云盘), download(备份云盘文件到本地)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_SYNC_MODE=download&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 备份策略: exclusive(排他备份文件，目标目录多余的文件会被删除),increment(增量备份文件，目标目录多余的文件不会被删除)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#- ALIYUNPAN_SYNC_POLICY=increment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 备份周期, 支持两种: infinity(永久循环备份),onetime(只运行一次备份)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#- ALIYUNPAN_SYNC_CYCLE=infinity&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 网盘：backup(备份盘), resource(资源盘)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_SYNC_DRIVE=resource&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 是否显示文件备份过程日志，true-显示，false-不显示&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_SYNC_LOG=true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 本地文件修改检测延迟间隔，单位秒。如果本地文件会被频繁修改，例如录制视频文件，配置好该时间可以避免上传未录制好的文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ALIYUNPAN_LOCAL_DELAY_TIME=60&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重点说一下上边的四个配置：&lt;/p>
&lt;p>第一个是挂载配置下的&lt;code>映射的本地目录&lt;/code>，这个是把阿里云盘的数据下载下来的目录，需要把他挂载在一个比较大的存储路径。&lt;/p>
&lt;p>第二个是备份模式：&lt;code>ALIYUNPAN_SYNC_MOD&lt;/code>，我这里是把云盘文件下载到本地，所以模式是&lt;code>download&lt;/code>。&lt;/p>
&lt;p>第三个是网盘：&lt;code>ALIYUNPAN_SYNC_DRIVE&lt;/code>，阿里云盘分为备份盘和资源盘，我这里大部分转存的文件都是放在资源盘，所以这里配置&lt;code>resource&lt;/code>。&lt;/p>
&lt;p>第四个是备份目标目录：&lt;code>ALIYUNPAN_PAN_DIR&lt;/code>，这个配置就是当前容器需要下载的目录，上边指定了需要下载资源盘的文件，但是肯定不能整个资源盘都下载，只需要指定特定的目录下载就行了，比如我转存的文件都是放在&lt;code>来自分享&lt;/code>目录下，我这里就配置来自分享。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=STRHaU84cVVtSm1LSEZrWHVLdDhqcStzK1ZoYjdmc3lJRXBsekxKcjNjYmpxajdFVFVhcWZrejg4TUwrQTJRdFo0OGZDcmc9"
loading="lazy"
alt="aliyunpan share"
>&lt;/p>
&lt;p>js的通知后边在讲，这个目录里边暂时可以先不放任何js文件。&lt;/p>
&lt;p>然后就可以启动docker compose文件了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker compose up -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时虽然启动了容器，但是因为没有配置token，容器会一直重启，但是此时目录config目录下就会多出一个aliyun_config.json的文件，编辑文件找到&lt;code>accessToken&lt;/code>属性，把第一步生成好的token替换进去就可以了。保存文件后等待容器下一次重启或者手动重启容器就可以了。此时就可以了。&lt;/p>
&lt;h2 id="验证">验证
&lt;/h2>&lt;p>接下来就是找一个文件保存到云盘的指定要下载的目录，我是&lt;code>来自分享&lt;/code>，然后去看一下目录有没有进行下载。也可以通过查看容器的日志：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@docker:~/images/aliyunpancli# docker compose logs -tf --tail &lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARN&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> /root/images/aliyunpancli/docker-compose.yaml: &lt;span class="sb">`&lt;/span>version&lt;span class="sb">`&lt;/span> is obsolete
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan-sync &lt;span class="p">|&lt;/span> 2024-07-06T02:52:51.522742265Z 扫描到云盘文件：/来自分享/Cover the sky.S01E61.2023.2160p.WEB.DL.H265.DDP2.0-BestWEB.mkv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan-sync &lt;span class="p">|&lt;/span> 2024-07-06T02:52:56.282356345Z 完成全部文件的同步下载，等待下一次扫描
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan-sync &lt;span class="p">|&lt;/span> 2024-07-06T02:53:51.550419129Z 开始进行文件扫描...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan-sync &lt;span class="p">|&lt;/span> 2024-07-06T02:53:51.756156867Z 扫描到云盘文件：/来自分享/Jade Dynasty.S02E43.2022.2160p.WEB-DL.H265.DDP2.0-BestWEB.mkv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan-sync &lt;span class="p">|&lt;/span> 2024-07-06T02:53:51.756982180Z 扫描到云盘文件：/来自分享/Cover the sky.S01E61.2023.2160p.WEB.DL.H265.DDP2.0-BestWEB.mkv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aliyunpan-sync &lt;span class="p">|&lt;/span> 2024-07-06T02:53:56.554962070Z 下载文件：/来自分享/Jade Dynasty.S02E43.2022.2160p.WEB-DL.H265.DDP2.0-BestWEB.mkv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">下载到本地:/home/app/data/Jade Dynasty.S02E43.2022.2160p.WEB-DL.H265.DDP2.0-BestWEB.mkv ↓ 773.00MB/779.46MB&lt;span class="o">(&lt;/span>99.17%&lt;span class="o">)&lt;/span> 9.64MB/s............下载完毕：/home/app/data/Jade Dynasty.S02E43.2022.2160p.WEB-DL.H265.DDP2.0-BestWEB.mkv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过日志可以看出它在不停的扫描，检测到新文件就开始进行下载。&lt;/p>
&lt;h2 id="js通知">JS通知
&lt;/h2>&lt;p>在docker compose文件中，指定了js文件的目录，那么要怎么使用呢？官方也有一些具体的例子：&lt;a class="link" href="https://github.com/tickstep/aliyunpan/blob/main/docs/manual.md#JavaScript%E6%8F%92%E4%BB%B6" target="_blank" rel="noopener"
>JavaScript插件&lt;/a>，我这里需要提供一个下载完成通知的功能，保存文件后什么时候下载完成是大家比较关心的，总不能总是查看日志。&lt;/p>
&lt;p>这里要使用到的js文件是&lt;code>sync_handler.js&lt;/code>文件。文件具体的内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ------------------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 函数说明：同步备份-同步文件后的回调函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 参数说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// context - 当前调用的上下文信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;appName&amp;#34;: &amp;#34;aliyunpan&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;version&amp;#34;: &amp;#34;v0.1.3&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;userId&amp;#34;: &amp;#34;11001d48564f43b3bc5662874f04bb11&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;nickname&amp;#34;: &amp;#34;tickstep&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;fileDriveId&amp;#34;: &amp;#34;19519111&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;albumDriveId&amp;#34;: &amp;#34;29519122&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// appName - 应用名称，当前固定为aliyunpan
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// version - 版本号
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// userId - 当前登录用户的ID
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// nickname - 用户昵称
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// fileDriveId - 用户文件网盘ID
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// albumDriveId - 用户相册网盘ID
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// params - 同步文件后的参数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;action&amp;#34;: &amp;#34;upload&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;actionResult&amp;#34;: &amp;#34;success&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;driveId&amp;#34;: &amp;#34;19519221&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;fileName&amp;#34;: &amp;#34;1.txt&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;filePath&amp;#34;: &amp;#34;D:/goprojects/dev/upload/1.txt&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;fileSha1&amp;#34;: &amp;#34;294C8F24C56042710813E95C55A0B018299BA9A7&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;fileSize&amp;#34;: &amp;#34;28077&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;fileType&amp;#34;: &amp;#34;file&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;fileUpdatedAt&amp;#34;: &amp;#34;2022-03-04 15:19:47&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// action - 同步动作，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// download-下载文件，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// upload-上传文件，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// delete_local-删除本地文件，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// delete_pan-删除云盘文件，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// create_local_folder-创建本地文件夹，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// create_pan_folder-创建云盘文件夹
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// actionResult - 同步结果，success-成功，fail-失败
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// driveId - 网盘ID
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// fileName - 文件名称
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// filePath - 文件完整路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// fileSha1 - 文件SHA1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// fileSize - 文件大小，单位B
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// fileType - 文件类型，file-文件，folder-文件夹
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// fileUpdatedAt - 文件修改时间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 返回值说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// （无）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ------------------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">syncFileFinishCallback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;User-Agent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;application/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;文件名：&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;fileName&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34; 同步完成, 同步结果: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;actionResult&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;actionResult&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;fail&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">reqData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;chat_id&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;这里是自己的id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">PluginUtil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">header&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;https://api.telegram.org/{这里替换具体的电报机器人token}/sendMessage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">reqData&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s2">&amp;#34;Error&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>怎么创建电报机器人以及获取自己的id这里就不再说了，大家可以网上搜索一下，如果后续时间充裕，我也会详细教大家如何创建机器人和查看自己的id。&lt;/p>
&lt;p>text就是通知的内容，来看一下最终的通知效果：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=Nzd2MWN1T2xseG0rcFptY0V2UnVZYkJXRzN3b2EyMC9LeWszckhUZmY2TGZZWllQUFFST1hIbnNwa1BGWmVrWmVnM2dUTG89"
loading="lazy"
alt="aliyunpan sync notification"
>&lt;/p></description></item><item><title>搭建属于自己的影视小站：小雅Alist安装及使用</title><link>https://konghanghang.github.io/iminling-pages/2024/how-to-build-xiaoya-alist-and-use/</link><pubDate>Sat, 20 Apr 2024 06:39:56 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2024/how-to-build-xiaoya-alist-and-use/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=VTJuMzZadnFMdGQzWkp6ZFlHWk44dm1scFJnV0xZVXp4aGVnbHBCNmszQ2tqSU9sRkxTSmJNZlljSWtSb3pkWVdMdXVkQlk9" alt="Featured image of post 搭建属于自己的影视小站：小雅Alist安装及使用" />&lt;p>之前一直在使用其他的影视站去看一些电影，这些影视站基本网速都比较慢，画质也都一般，观看体验也不怎么好，这里顺便也分享一下我一直使用的影视站：&lt;a class="link" href="https://www.549.tv/" target="_blank" rel="noopener"
>影视森林&lt;/a>，该站整理了一些比较不错的影视站。偶然的机会下了解到了小雅(xiaoya)Alist，搭配阿里云盘简直不要太爽，作者也在一直更新资源，非常推荐自己搭建，下边就简单介绍一下我的搭建过程以及一些使用。&lt;/p>
&lt;h2 id="准备工作">准备工作
&lt;/h2>&lt;p>在进行安装前需要先获取三个东西：token,open token以及folder id,下边介绍一下如何获取这几个信息。另外需要在机器上安装docker，因为小雅Alist是使用docker镜像来安装的，如果本机还没有安装docker,可以参考我的文章：&lt;a class="link" href="https://www.iminling.com/2023/06/10/164.html" title="docker安装"
target="_blank" rel="noopener"
>docker安装&lt;/a> 来安装docker。&lt;/p>
&lt;h3 id="token">token
&lt;/h3>&lt;p>打开网站：&lt;a class="link" href="https://aliyuntoken.vercel.app/" target="_blank" rel="noopener"
>https://aliyuntoken.vercel.app/&lt;/a>，会出现二维码，使用手机端的阿里云盘扫描就可以获取到token。先记录下。&lt;/p>
&lt;h3 id="open-token">open token
&lt;/h3>&lt;p>打开网站：&lt;a class="link" href="https://alist.nn.ci/tool/aliyundrive/request.html" target="_blank" rel="noopener"
>Get Aliyundrive Refresh Token&lt;/a>，首先点击&lt;code>Scan QrCode&lt;/code>获取二维码，然后使用手机端阿里云盘扫描，扫描完成后再点击&lt;code>I have scan&lt;/code> 来获取&lt;code>refresh token&lt;/code>。同时记录下这个token。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=MU5XZFJXZ09VR2xVZkt3dS8vNEVzY2JvK3pWR0xLckI4M0c3M1JTdG5ER2piOERla09Obnd0NGJmd0thUTNseFNNc3JvdXM9"
loading="lazy"
alt="aliyun refresh token"
>&lt;/p>
&lt;h3 id="folder-id">folder id
&lt;/h3>&lt;p>打开小雅的分享地址：&lt;a class="link" href="https://www.alipan.com/s/rP9gP3h9asE" target="_blank" rel="noopener"
>https://www.alipan.com/s/rP9gP3h9asE&lt;/a>，将里边的内容转存到自己的网盘下，选择资源库。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=d0I5Y0JBQUVXSVBRRlVLcEF4TGEwU3k5ekxnVS85cXJTVU1iRHFDUStYNlRkMDhCcjZPdzF3WkFGSTlMQ0g3eGRubExvQjg9"
loading="lazy"
alt="aliyun share save"
>&lt;/p>
&lt;p>然后进入到自己的&lt;a class="link" href="https://www.alipan.com/" target="_blank" rel="noopener"
>阿里云盘&lt;/a>，打开刚才转存的目录，看地址栏，最后那一串字符串就是需要的folder id.记录改folder id.&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=TDBpdktOVmhIYXJKbDgxMk1uOFpBd3p3Zk85Ynd2Mm04VDZpNzllR0xOek5lb2Q4dlNTK0xiYmJ5eU4wc1A1TzZyZGN0VTA9"
loading="lazy"
alt="xiaoya folder id"
>&lt;/p>
&lt;p>经过上边几步，已经准备好了所需要的三个必须信息，下边就开始安装小雅Alist。&lt;/p>
&lt;h2 id="小雅alist安装">小雅Alist安装
&lt;/h2>&lt;p>安装有几种方式，小雅也有提供一键安装脚本，比较方便，下边我介绍一下几种安装方式。&lt;/p>
&lt;h3 id="一键脚本">一键脚本
&lt;/h3>&lt;p>这种方式最简单，在获取了上边的信息后，就可以直接在vps或者自己的电脑上进行安装，打开命令窗口(终端)执行一键安装脚本：bash -c &amp;ldquo;$(curl &lt;a class="link" href="http://docker.xiaoya.pro/update_new.sh%29%22" target="_blank" rel="noopener"
>http://docker.xiaoya.pro/update_new.sh)"&lt;/a>，执行后会提示输入token（32位）、open Token也就是刚才的refresh Token(335位)以及folder id(40位)，输入完成后就开始了安装，等待结束就可以了。通过docker 命令&lt;code>docker ps&lt;/code>来查看安装情况,看是否有一个容器名称为&lt;code>xiaoya&lt;/code>,存在就说明安装成功。&lt;/p>
&lt;p>一键脚本安装的小雅默认配置文件是在&lt;code>/etc/xiaoya&lt;/code>目录下，后续的配置文件都需要往这个文件下配置。&lt;/p>
&lt;h3 id="docker命令">docker命令
&lt;/h3>&lt;p>上边介绍了一键脚本，本质上也是使用docker命令来安装的，如果我们想要自己控制配置放在什么地址，可以把脚本下载下来自行修改，或者来进行docker的配置安装。&lt;/p>
&lt;p>比如我想把配置文件放在&lt;code>/data/xiaoya&lt;/code>下，那么我需要在&lt;code>data/xiaoya&lt;/code>目录下先新建三个文件:&lt;/p>
&lt;ol>
&lt;li>&lt;code>mytoken.txt&lt;/code>：把信息准备中的token字符串放在这个文件里。&lt;/li>
&lt;li>&lt;code>myopentoken.txt&lt;/code>：把信息准备中的refresh Token字符串放在这个文件里&lt;/li>
&lt;li>&lt;code>temp_transfer_folder_id.txt&lt;/code>：把folder id字符串放在这个文件里。&lt;/li>
&lt;/ol>
&lt;p>此时准备工作就完成了，可以来使用命令来安装小雅了：
&lt;code>docker run -d --network=host -v /data/xiaoya:/data --restart=always --name=xiaoya xiaoyaliu/alist:hostmode&lt;/code>,等待安装完成，同样通过&lt;code>docker ps&lt;/code>来查看是否启动成功，后续所有的配置文件都放在&lt;code>/data/xiaoya&lt;/code>目录下。&lt;/p>
&lt;h3 id="docker-compose安装">docker compose安装
&lt;/h3>&lt;p>这种是我最常用的方式，容器的配置都放在compose文件中，方便管理。和docker安装差不多，也是先需要将三个文件创建出来，目录结构如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@docker:~/xiaoya# tree -l
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── docker_address.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── myopentoken.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── mytoken.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── temp_transfer_folder_id.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>docker-compose.yaml文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">root@docker:~/xiaoya# cat docker-compose.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3.9&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">xiaoya&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">xiaoyaliu/alist:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">xiaoya&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">.env&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">5678&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2345&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">2345&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2346&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">2346&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./data:/data&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=Asia/Shanghai&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后在&lt;code>~/xiaoya&lt;/code>目录下执行 &lt;code>docker compose up -d&lt;/code>启动就可以了。&lt;/p>
&lt;p>经过上边的安装已经可以通过你的&lt;code>机器ip:5678&lt;/code>来访问了。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=ektqWVRFVFhvR1dxYVh3L2tER0pPcW81enFVTTdLZDNqWGRsVUdWV25ZYW0xL0thaTJEdFQwa3cyM3ZwNUcrTEsxYVZSWHM9"
loading="lazy"
alt="alist index"
>&lt;/p>
&lt;h2 id="播放">播放
&lt;/h2>&lt;p>经过上边安装默认情况下已经可以正常使用了，在网页端找到自己想观看的电影，直接在网页端观看，或者在视频播放器下边的按钮里选择自己本地已安装的程序打开进行播放,例如下边有iina,VLC等播放器，自己在本地安装就可以了。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=QUVpM0YwUDcxRG5IZGlISXhyU0pJY21VTGFMUzg2bE1qbGFXY1FFOXNIb2d4ZUlnWkticUJ5MEM1eWk3YjFiUHhyUWxlekE9"
loading="lazy"
alt="alist play"
>&lt;/p>
&lt;p>也可以在小雅Alist中找到对应的安装包，也提供了很多播放器的安装包：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=YnZOV01KZXNKZnlXbkZXMytqUFN4Yzc4eUxvUjJkOGpzY2JiZ05ZalB1V05UNjZSam5QZDhyMWpFUUxMQnY3Z0U0NDNON0E9"
loading="lazy"
alt="alist software"
>&lt;/p>
&lt;h3 id="安卓手机">安卓手机
&lt;/h3>&lt;p>想要在安卓手机上使用alist,我是使用tvbox来观看的，在小雅Alist提供的安装包里也是有tvbox的，需要在配置文件目录新建一个&lt;code>docker_address.txt&lt;/code>文件，里边填写http://xxxxx:5678，网址最后不需要/, xxx替换为自己的vps的ip，或者搭建机器的内网ip。&lt;/p>
&lt;p>安卓手机正常安装后进行配置：http://xxxxx:5678/tvbox/my.json。&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=aC9La1lEV1pSUHhsK1ZWcHZPN1hzOTU5SlljWnZEaFkweUt6NW1PNk5naHZqR0VrMUNWWWhLdWl1c3RjTVNTNXJEeXVQMTg9"
loading="lazy"
alt="tvbox setting"
>&lt;/p>
&lt;p>如果同时有内网以及外网地址，那么想要在公网访问，则需要再多建一个&lt;code>docker_address_ext.txt&lt;/code>,里边需要填写公网的&lt;code>ip:端口&lt;/code>,然后在tvbox中进行配置:http://xxxxx:5678/tvbox/my_ext.json就可以了。&lt;/p>
&lt;h3 id="电视端">电视端
&lt;/h3>&lt;p>其实和安卓端是一样的，安装tvbox(安装包也是在小雅Alist中获取)，按照安卓的配置方式，进行配置后就可以观看了。&lt;/p>
&lt;h2 id="配置">配置
&lt;/h2>&lt;h3 id="登录配置">登录配置
&lt;/h3>&lt;p>如果你搭建的机器是公网的，又不想别人随便使用，可以通过配置，需要使用账号和密码来登录，需要在配置文件目录添加两个文件:&lt;code>guestlogin.txt&lt;/code>,和&lt;code>guestpass.txt&lt;/code>两个文件，&lt;code>guestlogin.txt&lt;/code>控制Alist网页端需要登录，只是一个空文件就可以了，&lt;code>guestpass.txt&lt;/code>里边内容是登录密码，这样子访问你的Alist就需要账号和密码了，账号是：dav，密码是&lt;code>guestpass.txt&lt;/code>中的内容。&lt;/p>
&lt;p>其他配置暂时也没有使用到，后续有使用到再进行更新，祝大家都能顺利安装成功。&lt;/p></description></item></channel></rss>