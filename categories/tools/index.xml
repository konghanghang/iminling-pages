<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on 记录点滴 - 分享</title><link>https://konghanghang.github.io/iminling-pages/categories/tools/</link><description>Recent content in Tools on 记录点滴 - 分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>iminling.com</copyright><lastBuildDate>Sat, 05 Apr 2025 02:38:24 +0000</lastBuildDate><atom:link href="https://konghanghang.github.io/iminling-pages/categories/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Typora使用picgo-core配置上传图片到easyimage图床</title><link>https://konghanghang.github.io/iminling-pages/2025/typora-how-to-use-picgo-upload-image-to-easyimage/</link><pubDate>Sat, 05 Apr 2025 02:38:24 +0000</pubDate><guid>https://konghanghang.github.io/iminling-pages/2025/typora-how-to-use-picgo-upload-image-to-easyimage/</guid><description>&lt;img src="https://images.iminling.com/app/hide.php?key=ZXNZbUNpQ1NObTUvdVJuVFlEa0xZcURTZmgzM2FISnV5MHVGQjR4OVRGSXJSWHRORmFkSTFZdkRWaEd2UFI5bDh0VWttZTQ9" alt="Featured image of post Typora使用picgo-core配置上传图片到easyimage图床" />&lt;p>typora是一个非常方便的markdown编辑器，如果我们不做配置，图片仅仅只是存储在本地磁盘，如果本地磁盘出现问题，那么图片就全没了，所以今天就研究一下搭配picgo-core来把插入的图片上传到图床，我这里使用的是easyimage图床。&lt;/p>
&lt;p>picgo可以直接安装官方app，也可以使用node命令去进行配置，我这里为了简单直接使用node的方式去配置，在此之前请确定在本机已正确安装了node的环境。我使用的是mac，且也已配置好brew环境，可以直接使用brew来进行安装。&lt;/p>
&lt;h2 id="安装node">安装node
&lt;/h2>&lt;p>搜索可使用的node版本并安装，这里安装18版本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [10:35:56] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ brew search &lt;span class="nv">nodejs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&amp;gt; Formulae
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node nodenv node@22 node@20 node@18 node@16 node@14
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&amp;gt; Casks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nodeclipse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [10:36:04] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ brew install node@18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&amp;gt; node@18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node@18 is keg-only, which means it was not symlinked into /opt/homebrew,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">because this is an alternate version of another formula.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">If you need to have node@18 first in your PATH, run:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=&amp;#34;/opt/homebrew/opt/node@18/bin:$PATH&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">For compilers to find node@18 you may need to set:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">LDFLAGS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;-L/opt/homebrew/opt/node@18/lib&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">CPPFLAGS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;-I/opt/homebrew/opt/node@18/include&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装后还需要添加环境变量，通过上面给的命令来执行&lt;code>echo 'export PATH=&amp;quot;/opt/homebrew/opt/node@18/bin:$PATH&amp;quot;' &amp;gt;&amp;gt; ~/.zshrc&lt;/code>，最后再刷新环境变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [10:38:36] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">source&lt;/span> .zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [10:38:43] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ node -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v18.20.8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后通过npm来安装picgo:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [10:38:48] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm install picgo -g
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装情况后可以使用picgo set uploader来设置上传配置，但是默认情况下不支持自定义图床，只能选定他给的几种：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [10:39:06] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ picgo &lt;span class="nb">set&lt;/span> uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? Choose a&lt;span class="o">(&lt;/span>n&lt;span class="o">)&lt;/span> uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> aliyun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tcyun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> smms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> github
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> qiniu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> imgur
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">❯ upyun
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安装web-uploader">安装web-uploader
&lt;/h2>&lt;p>通过easyimage官方的文档来看，应该是有一个插件可以安装来支持自定义图床上传的：&lt;a class="link" href="https://github.com/icret/EasyImages2.0/blob/master/docs/%E4%BD%BF%E7%94%A8PicGo%E4%B8%8A%E4%BC%A0.md" target="_blank" rel="noopener"
>使用PicGo上传.md&lt;/a>, 插件的名称是&lt;code>web-uploader&lt;/code>，那怎么安装呢？通过picgo的命令来查看：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [10:54:19] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ picgo -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Usage: picgo &lt;span class="o">[&lt;/span>options&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>command&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Options:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -v, --version output the version number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -d, --debug debug mode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -h, --help display &lt;span class="nb">help&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nb">command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Commands:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> install&lt;span class="p">|&lt;/span>add &lt;span class="o">[&lt;/span>options&lt;span class="o">]&lt;/span> &amp;lt;plugins...&amp;gt; install picgo plugin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uninstall&lt;span class="p">|&lt;/span>rm &amp;lt;plugins...&amp;gt; uninstall picgo plugin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到可以使用install或add命令来安装。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [11:10:45] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ picgo install web-uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">added &lt;span class="m">1&lt;/span> package, and audited &lt;span class="m">2&lt;/span> packages in 2s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">found &lt;span class="m">0&lt;/span> vulnerabilities
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>PicGo SUCCESS&lt;span class="o">]&lt;/span>: 插件安装成功
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>picgo的配置文件所在位置如下：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Linux / macOS → &lt;code>~/.picgo/config.json&lt;/code>.&lt;/li>
&lt;li>Windows → &lt;code>C:\Users\[your user name]\.picgo\config.json&lt;/code>.&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>查看里边的目录情况：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [11:17:34] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ tree .picgo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.picgo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── i18n-cli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── node_modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package-lock.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── picgo.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在package里记录了所有的插件信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [11:11:14] C:1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat .picgo/package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;picgo-plugins&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;description&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;picgo-plugins&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;repository&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;https://github.com/PicGo/PicGo-Core&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;license&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;MIT&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;dependencies&amp;#34;&lt;/span>:&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;picgo-plugin-web-uploader&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;^1.1.1&amp;#34;&lt;/span>&lt;span class="o">}}&lt;/span>%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置自定义图床">配置自定义图床
&lt;/h2>&lt;p>安装web-uploader后，再次执行set uploader命令查看：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [11:21:32] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ picgo &lt;span class="nb">set&lt;/span> uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? Choose a&lt;span class="o">(&lt;/span>n&lt;span class="o">)&lt;/span> uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> smms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> github
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> qiniu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">❯ imgur
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> upyun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> web-uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> aliyun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>Move up and down to reveal more choices&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到多了一个web-uploader选项，下边进行来设置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~ [11:21:32] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ picgo &lt;span class="nb">set&lt;/span> uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? Choose a&lt;span class="o">(&lt;/span>n&lt;span class="o">)&lt;/span> uploader web-uploader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? API地址 https://images.xxx.com/api/index.php
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? POST参数名 image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? 图片URL JSON路径&lt;span class="o">(&lt;/span>eg: data.url&lt;span class="o">)&lt;/span> url
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? 自定义请求头 标准JSON&lt;span class="o">(&lt;/span>eg: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">? 自定义Body 标准JSON&lt;span class="o">(&lt;/span>eg: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;token&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;aaaaaa&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>每个参数是什么意义可以参考&lt;a class="link" href="https://github.com/icret/EasyImages2.0/blob/master/docs/%E4%BD%BF%E7%94%A8PicGo%E4%B8%8A%E4%BC%A0.md" target="_blank" rel="noopener"
>使用PicGo上传.md&lt;/a>,其中api地址是自己网站的地址，post参数和图片URL JSON路径是固定，自定义请求头标准JSON可以置空，自定义body标准JSON则是在easyimage后台获取到的token替换我上边的&lt;code>aaaaaa&lt;/code>;&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=c0VrUS92K2Nka3VXbEpsc2xBaHc1Wkt0M3pBMjlsNnpSbjN6TDlQQnkwcTZRZTBlYkZBMVprZTNCZEVVamlDbGVYMVcrR2s9"
loading="lazy"
alt="image-20250404135028240"
>&lt;/p>
&lt;p>另外需要自己开启支持API上传：&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=ZTJDMEJjSFZtRm5aWXNZR3dsYlhHeWJTRnBaN0taa3hrVG9YTE1YMVZVWmVZK0RNL3ZkL3VzTVR1SFRJdHh3SGZGb1ZXOU09"
loading="lazy"
alt="image-20250404135121045"
>&lt;/p>
&lt;h2 id="typora配置">Typora配置
&lt;/h2>&lt;p>在typora的设置中，选择插入图片时的动作，这里选择上传图片。&lt;/p>
&lt;p>主要是上传服务设置，因为我这里没有安装picgo的客户段，而是使用的picgo-core来搭配node使用，所以上传服务选择自定义命令，命令的内容是：&lt;/p>
&lt;p>&lt;code>{node位置} {picgo位置} u&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://images.iminling.com/app/hide.php?key=NFNUbFRLbXJwODZUKzVnTWp4QWpCQzYzUUd3SWtRenZRRmtEeGV4S3Vra240cWdCYUthbGNvWTNaNndGNnpwUFJseUFycm89"
loading="lazy"
alt="image-20250404135452149"
>&lt;/p>
&lt;p>node的位置在安装node的时候就已经知道了，我们还把bin添加进了PATH中，具体位置：&lt;code>/opt/homebrew/opt/node@18/bin/node&lt;/code>,那么安装的picgo在什么位置呢？通过以下命令来查看：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~/.npm [12:01:34] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm list --depath&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/Users/hangkong/.npm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── &lt;span class="o">(&lt;/span>empty&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># aaa @ Mac-mini-m4 in ~/.npm [12:02:54] &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm list --depath&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> --global
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/opt/homebrew/lib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── picgo@1.5.8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到位置在&lt;code>/opt/homebrew/lib&lt;/code>目录下，完整的路径为：&lt;code>/opt/homebrew/lib/node_modules/picgo/bin/picgo&lt;/code>。&lt;/p>
&lt;p>那么设置的完整命令就是：&lt;code>/opt/homebrew/opt/node@18/bin/node /opt/homebrew/lib/node_modules/picgo/bin/picgo u&lt;/code>。&lt;/p>
&lt;p>经过上边的配置，就可以在使用typora插入图片的时候直接上传的easyimage图床了。&lt;/p></description></item></channel></rss>